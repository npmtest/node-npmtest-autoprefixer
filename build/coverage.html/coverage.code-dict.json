{"/home/travis/build/npmtest/node-npmtest-autoprefixer/test.js":"/* istanbul instrument in package npmtest_autoprefixer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/lib.npmtest_autoprefixer.js":"/* istanbul instrument in package npmtest_autoprefixer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_autoprefixer = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_autoprefixer = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-autoprefixer && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_autoprefixer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_autoprefixer\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught.stack);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_autoprefixer.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_autoprefixer.rollup.js'] =\n            local.assetsDict['/assets.npmtest_autoprefixer.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_autoprefixer.__dirname +\n                    '/lib.npmtest_autoprefixer.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/autoprefixer.js":"(function() {\n  var Browsers, Prefixes, browserslist, cache, isPlainObject, postcss, timeCapsule,\n    slice = [].slice;\n\n  browserslist = require('browserslist');\n\n  postcss = require('postcss');\n\n  Browsers = require('./browsers');\n\n  Prefixes = require('./prefixes');\n\n  isPlainObject = function(obj) {\n    return Object.prototype.toString.apply(obj) === '[object Object]';\n  };\n\n  cache = {};\n\n  timeCapsule = function(result, prefixes) {\n    if (prefixes.browsers.selected.length === 0) {\n      return;\n    }\n    if (prefixes.add.selectors.length > 0) {\n      return;\n    }\n    if (Object.keys(prefixes.add).length > 2) {\n      return;\n    }\n    return result.warn('Greetings, time traveller. ' + 'We are in the golden age of prefix-less CSS, ' + 'where Autoprefixer is no longer needed for your stylesheet.');\n  };\n\n  module.exports = postcss.plugin('autoprefixer', function() {\n    var loadPrefixes, options, plugin, reqs;\n    reqs = 1 <= arguments.length ? slice.call(arguments, 0) : [];\n    if (reqs.length === 1 && isPlainObject(reqs[0])) {\n      options = reqs[0];\n      reqs = void 0;\n    } else if (reqs.length === 0 || (reqs.length === 1 && (reqs[0] == null))) {\n      reqs = void 0;\n    } else if (reqs.length <= 2 && (reqs[0] instanceof Array || (reqs[0] == null))) {\n      options = reqs[1];\n      reqs = reqs[0];\n    } else if (typeof reqs[reqs.length - 1] === 'object') {\n      options = reqs.pop();\n    }\n    options || (options = {});\n    if (options.browser) {\n      throw new Error('Change `browser` option to `browsers` in Autoprefixer');\n    }\n    if (options.browsers != null) {\n      reqs = options.browsers;\n    }\n    loadPrefixes = function(opts) {\n      var browsers, key, stats;\n      stats = options.stats;\n      browsers = new Browsers(module.exports.data.browsers, reqs, opts, stats);\n      key = browsers.selected.join(', ') + JSON.stringify(options);\n      return cache[key] || (cache[key] = new Prefixes(module.exports.data.prefixes, browsers, options));\n    };\n    plugin = function(css, result) {\n      var prefixes, ref;\n      prefixes = loadPrefixes({\n        from: (ref = css.source) != null ? ref.input.file : void 0,\n        env: options.env\n      });\n      timeCapsule(result, prefixes);\n      if (options.remove !== false) {\n        prefixes.processor.remove(css);\n      }\n      if (options.add !== false) {\n        return prefixes.processor.add(css, result);\n      }\n    };\n    plugin.options = options;\n    plugin.info = function(opts) {\n      return require('./info')(loadPrefixes(opts));\n    };\n    return plugin;\n  });\n\n  module.exports.data = {\n    browsers: require('caniuse-db/data.json').agents,\n    prefixes: require('../data/prefixes')\n  };\n\n  module.exports.defaults = browserslist.defaults;\n\n  module.exports.info = function() {\n    return module.exports().info();\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/browsers.js":"(function() {\n  var Browsers, browserslist, utils;\n\n  browserslist = require('browserslist');\n\n  utils = require('./utils');\n\n  Browsers = (function() {\n    Browsers.prefixes = function() {\n      var data, i, name;\n      if (this.prefixesCache) {\n        return this.prefixesCache;\n      }\n      data = require('caniuse-db/data.json').agents;\n      return this.prefixesCache = utils.uniq((function() {\n        var results;\n        results = [];\n        for (name in data) {\n          i = data[name];\n          results.push(\"-\" + i.prefix + \"-\");\n        }\n        return results;\n      })()).sort(function(a, b) {\n        return b.length - a.length;\n      });\n    };\n\n    Browsers.withPrefix = function(value) {\n      if (!this.prefixesRegexp) {\n        this.prefixesRegexp = RegExp(\"\" + (this.prefixes().join('|')));\n      }\n      return this.prefixesRegexp.test(value);\n    };\n\n    function Browsers(data1, requirements, options, stats) {\n      this.data = data1;\n      this.options = options;\n      this.stats = stats;\n      this.selected = this.parse(requirements);\n    }\n\n    Browsers.prototype.parse = function(requirements) {\n      var ref, ref1;\n      return browserslist(requirements, {\n        stats: this.stats,\n        path: (ref = this.options) != null ? ref.from : void 0,\n        env: (ref1 = this.options) != null ? ref1.env : void 0\n      });\n    };\n\n    Browsers.prototype.browsers = function(criteria) {\n      var browser, data, ref, selected, versions;\n      selected = [];\n      ref = this.data;\n      for (browser in ref) {\n        data = ref[browser];\n        versions = criteria(data).map(function(version) {\n          return browser + \" \" + version;\n        });\n        selected = selected.concat(versions);\n      }\n      return selected;\n    };\n\n    Browsers.prototype.prefix = function(browser) {\n      var data, name, prefix, ref, version;\n      ref = browser.split(' '), name = ref[0], version = ref[1];\n      data = this.data[name];\n      if (data.prefix_exceptions) {\n        prefix = data.prefix_exceptions[version];\n      }\n      prefix || (prefix = data.prefix);\n      return '-' + prefix + '-';\n    };\n\n    Browsers.prototype.isSelected = function(browser) {\n      return this.selected.indexOf(browser) !== -1;\n    };\n\n    return Browsers;\n\n  })();\n\n  module.exports = Browsers;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/utils.js":"(function() {\n  var list;\n\n  list = require('postcss/lib/list');\n\n  module.exports = {\n    error: function(text) {\n      var err;\n      err = new Error(text);\n      err.autoprefixer = true;\n      throw err;\n    },\n    uniq: function(array) {\n      var filtered, i, j, len;\n      filtered = [];\n      for (j = 0, len = array.length; j < len; j++) {\n        i = array[j];\n        if (filtered.indexOf(i) === -1) {\n          filtered.push(i);\n        }\n      }\n      return filtered;\n    },\n    removeNote: function(string) {\n      if (string.indexOf(' ') === -1) {\n        return string;\n      } else {\n        return string.split(' ')[0];\n      }\n    },\n    escapeRegexp: function(string) {\n      return string.replace(/[.?*+\\^\\$\\[\\]\\\\(){}|\\-]/g, '\\\\$&');\n    },\n    regexp: function(word, escape) {\n      if (escape == null) {\n        escape = true;\n      }\n      if (escape) {\n        word = this.escapeRegexp(word);\n      }\n      return RegExp(\"(^|[\\\\s,(])(\" + word + \"($|[\\\\s(,]))\", \"gi\");\n    },\n    editList: function(value, callback) {\n      var changed, join, origin;\n      origin = list.comma(value);\n      changed = callback(origin, []);\n      if (origin === changed) {\n        return value;\n      } else {\n        join = value.match(/,\\s*/);\n        join = join ? join[0] : ', ';\n        return changed.join(join);\n      }\n    }\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/prefixes.js":"(function() {\n  var AtRule, Browsers, Declaration, Prefixes, Processor, Resolution, Selector, Supports, Transition, Value, declsCache, utils, vendor;\n\n  Declaration = require('./declaration');\n\n  Resolution = require('./resolution');\n\n  Transition = require('./transition');\n\n  Processor = require('./processor');\n\n  Supports = require('./supports');\n\n  Browsers = require('./browsers');\n\n  Selector = require('./selector');\n\n  AtRule = require('./at-rule');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  vendor = require('postcss/lib/vendor');\n\n  Selector.hack(require('./hacks/fullscreen'));\n\n  Selector.hack(require('./hacks/placeholder'));\n\n  Declaration.hack(require('./hacks/flex'));\n\n  Declaration.hack(require('./hacks/order'));\n\n  Declaration.hack(require('./hacks/filter'));\n\n  Declaration.hack(require('./hacks/grid-end'));\n\n  Declaration.hack(require('./hacks/flex-flow'));\n\n  Declaration.hack(require('./hacks/flex-grow'));\n\n  Declaration.hack(require('./hacks/flex-wrap'));\n\n  Declaration.hack(require('./hacks/grid-start'));\n\n  Declaration.hack(require('./hacks/align-self'));\n\n  Declaration.hack(require('./hacks/flex-basis'));\n\n  Declaration.hack(require('./hacks/mask-border'));\n\n  Declaration.hack(require('./hacks/align-items'));\n\n  Declaration.hack(require('./hacks/flex-shrink'));\n\n  Declaration.hack(require('./hacks/break-props'));\n\n  Declaration.hack(require('./hacks/writing-mode'));\n\n  Declaration.hack(require('./hacks/border-image'));\n\n  Declaration.hack(require('./hacks/justify-items'));\n\n  Declaration.hack(require('./hacks/align-content'));\n\n  Declaration.hack(require('./hacks/border-radius'));\n\n  Declaration.hack(require('./hacks/block-logical'));\n\n  Declaration.hack(require('./hacks/grid-template'));\n\n  Declaration.hack(require('./hacks/inline-logical'));\n\n  Declaration.hack(require('./hacks/grid-row-align'));\n\n  Declaration.hack(require('./hacks/transform-decl'));\n\n  Declaration.hack(require('./hacks/flex-direction'));\n\n  Declaration.hack(require('./hacks/image-rendering'));\n\n  Declaration.hack(require('./hacks/justify-content'));\n\n  Declaration.hack(require('./hacks/background-size'));\n\n  Declaration.hack(require('./hacks/text-emphasis-position'));\n\n  Value.hack(require('./hacks/stretch'));\n\n  Value.hack(require('./hacks/gradient'));\n\n  Value.hack(require('./hacks/pixelated'));\n\n  Value.hack(require('./hacks/image-set'));\n\n  Value.hack(require('./hacks/cross-fade'));\n\n  Value.hack(require('./hacks/flex-values'));\n\n  Value.hack(require('./hacks/display-flex'));\n\n  Value.hack(require('./hacks/display-grid'));\n\n  Value.hack(require('./hacks/filter-value'));\n\n  declsCache = {};\n\n  Prefixes = (function() {\n    function Prefixes(data1, browsers, options) {\n      var ref;\n      this.data = data1;\n      this.browsers = browsers;\n      this.options = options != null ? options : {};\n      ref = this.preprocess(this.select(this.data)), this.add = ref[0], this.remove = ref[1];\n      this.transition = new Transition(this);\n      this.processor = new Processor(this);\n    }\n\n    Prefixes.prototype.cleaner = function() {\n      var empty;\n      if (!this.cleanerCache) {\n        if (this.browsers.selected.length) {\n          empty = new Browsers(this.browsers.data, []);\n          this.cleanerCache = new Prefixes(this.data, empty, this.options);\n        } else {\n          return this;\n        }\n      }\n      return this.cleanerCache;\n    };\n\n    Prefixes.prototype.select = function(list) {\n      var add, all, data, name, notes, selected;\n      selected = {\n        add: {},\n        remove: {}\n      };\n      for (name in list) {\n        data = list[name];\n        add = data.browsers.map(function(i) {\n          var params;\n          params = i.split(' ');\n          return {\n            browser: params[0] + ' ' + params[1],\n            note: params[2]\n          };\n        });\n        notes = add.filter(function(i) {\n          return i.note;\n        }).map((function(_this) {\n          return function(i) {\n            return _this.browsers.prefix(i.browser) + ' ' + i.note;\n          };\n        })(this));\n        notes = utils.uniq(notes);\n        add = add.filter((function(_this) {\n          return function(i) {\n            return _this.browsers.isSelected(i.browser);\n          };\n        })(this)).map((function(_this) {\n          return function(i) {\n            var prefix;\n            prefix = _this.browsers.prefix(i.browser);\n            if (i.note) {\n              return prefix + ' ' + i.note;\n            } else {\n              return prefix;\n            }\n          };\n        })(this));\n        add = this.sort(utils.uniq(add));\n        if (this.options.flexbox === 'no-2009') {\n          add = add.filter(function(i) {\n            return i.indexOf('2009') === -1;\n          });\n        }\n        all = data.browsers.map((function(_this) {\n          return function(i) {\n            return _this.browsers.prefix(i);\n          };\n        })(this));\n        if (data.mistakes) {\n          all = all.concat(data.mistakes);\n        }\n        all = all.concat(notes);\n        all = utils.uniq(all);\n        if (add.length) {\n          selected.add[name] = add;\n          if (add.length < all.length) {\n            selected.remove[name] = all.filter(function(i) {\n              return add.indexOf(i) === -1;\n            });\n          }\n        } else {\n          selected.remove[name] = all;\n        }\n      }\n      return selected;\n    };\n\n    Prefixes.prototype.sort = function(prefixes) {\n      return prefixes.sort(function(a, b) {\n        var aLength, bLength;\n        aLength = utils.removeNote(a).length;\n        bLength = utils.removeNote(b).length;\n        if (aLength === bLength) {\n          return b.length - a.length;\n        } else {\n          return bLength - aLength;\n        }\n      });\n    };\n\n    Prefixes.prototype.preprocess = function(selected) {\n      var a, add, j, k, l, len, len1, len2, len3, len4, len5, len6, m, n, name, o, old, olds, p, prefix, prefixed, prefixes, prop, props, ref, ref1, ref2, ref3, remove, selector, value, values;\n      add = {\n        selectors: [],\n        '@supports': new Supports(Prefixes, this)\n      };\n      ref = selected.add;\n      for (name in ref) {\n        prefixes = ref[name];\n        if (name === '@keyframes' || name === '@viewport') {\n          add[name] = new AtRule(name, prefixes, this);\n        } else if (name === '@resolution') {\n          add[name] = new Resolution(name, prefixes, this);\n        } else if (this.data[name].selector) {\n          add.selectors.push(Selector.load(name, prefixes, this));\n        } else {\n          props = this.data[name].props;\n          if (props) {\n            value = Value.load(name, prefixes, this);\n            for (j = 0, len = props.length; j < len; j++) {\n              prop = props[j];\n              if (!add[prop]) {\n                add[prop] = {\n                  values: []\n                };\n              }\n              add[prop].values.push(value);\n            }\n          } else {\n            values = ((ref1 = add[name]) != null ? ref1.values : void 0) || [];\n            add[name] = Declaration.load(name, prefixes, this);\n            add[name].values = values;\n          }\n        }\n      }\n      remove = {\n        selectors: []\n      };\n      ref2 = selected.remove;\n      for (name in ref2) {\n        prefixes = ref2[name];\n        if (this.data[name].selector) {\n          selector = Selector.load(name, prefixes);\n          for (k = 0, len1 = prefixes.length; k < len1; k++) {\n            prefix = prefixes[k];\n            remove.selectors.push(selector.old(prefix));\n          }\n        } else if (name === '@keyframes' || name === '@viewport') {\n          for (l = 0, len2 = prefixes.length; l < len2; l++) {\n            prefix = prefixes[l];\n            prefixed = '@' + prefix + name.slice(1);\n            remove[prefixed] = {\n              remove: true\n            };\n          }\n        } else if (name === '@resolution') {\n          remove[name] = new Resolution(name, prefixes, this);\n        } else {\n          props = this.data[name].props;\n          if (props) {\n            value = Value.load(name, [], this);\n            for (m = 0, len3 = prefixes.length; m < len3; m++) {\n              prefix = prefixes[m];\n              old = value.old(prefix);\n              if (old) {\n                for (n = 0, len4 = props.length; n < len4; n++) {\n                  prop = props[n];\n                  if (!remove[prop]) {\n                    remove[prop] = {};\n                  }\n                  if (!remove[prop].values) {\n                    remove[prop].values = [];\n                  }\n                  remove[prop].values.push(old);\n                }\n              }\n            }\n          } else {\n            for (o = 0, len5 = prefixes.length; o < len5; o++) {\n              prefix = prefixes[o];\n              prop = vendor.unprefixed(name);\n              olds = this.decl(name).old(name, prefix);\n              if (name === 'align-self') {\n                a = (ref3 = add[name]) != null ? ref3.prefixes : void 0;\n                if (a) {\n                  if (prefix === '-webkit- 2009' && a.indexOf('-webkit-') !== -1) {\n                    continue;\n                  } else if (prefix === '-webkit-' && a.indexOf('-webkit- 2009') !== -1) {\n                    continue;\n                  }\n                }\n              }\n              for (p = 0, len6 = olds.length; p < len6; p++) {\n                prefixed = olds[p];\n                if (!remove[prefixed]) {\n                  remove[prefixed] = {};\n                }\n                remove[prefixed].remove = true;\n              }\n            }\n          }\n        }\n      }\n      return [add, remove];\n    };\n\n    Prefixes.prototype.decl = function(prop) {\n      var decl;\n      decl = declsCache[prop];\n      if (decl) {\n        return decl;\n      } else {\n        return declsCache[prop] = Declaration.load(prop);\n      }\n    };\n\n    Prefixes.prototype.unprefixed = function(prop) {\n      var value;\n      value = this.normalize(vendor.unprefixed(prop));\n      if (value === 'flex-direction') {\n        value = 'flex-flow';\n      }\n      return value;\n    };\n\n    Prefixes.prototype.normalize = function(prop) {\n      return this.decl(prop).normalize(prop);\n    };\n\n    Prefixes.prototype.prefixed = function(prop, prefix) {\n      prop = vendor.unprefixed(prop);\n      return this.decl(prop).prefixed(prop, prefix);\n    };\n\n    Prefixes.prototype.values = function(type, prop) {\n      var data, global, ref, ref1, values;\n      data = this[type];\n      global = (ref = data['*']) != null ? ref.values : void 0;\n      values = (ref1 = data[prop]) != null ? ref1.values : void 0;\n      if (global && values) {\n        return utils.uniq(global.concat(values));\n      } else {\n        return global || values || [];\n      }\n    };\n\n    Prefixes.prototype.group = function(decl) {\n      var checker, index, length, rule, unprefixed;\n      rule = decl.parent;\n      index = rule.index(decl);\n      length = rule.nodes.length;\n      unprefixed = this.unprefixed(decl.prop);\n      checker = (function(_this) {\n        return function(step, callback) {\n          var other;\n          index += step;\n          while (index >= 0 && index < length) {\n            other = rule.nodes[index];\n            if (other.type === 'decl') {\n              if (step === -1 && other.prop === unprefixed) {\n                if (!Browsers.withPrefix(other.value)) {\n                  break;\n                }\n              }\n              if (_this.unprefixed(other.prop) !== unprefixed) {\n                break;\n              } else if (callback(other) === true) {\n                return true;\n              }\n              if (step === +1 && other.prop === unprefixed) {\n                if (!Browsers.withPrefix(other.value)) {\n                  break;\n                }\n              }\n            }\n            index += step;\n          }\n          return false;\n        };\n      })(this);\n      return {\n        up: function(callback) {\n          return checker(-1, callback);\n        },\n        down: function(callback) {\n          return checker(+1, callback);\n        }\n      };\n    };\n\n    return Prefixes;\n\n  })();\n\n  module.exports = Prefixes;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/declaration.js":"(function() {\n  var Browsers, Declaration, Prefixer, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Prefixer = require('./prefixer');\n\n  Browsers = require('./browsers');\n\n  utils = require('./utils');\n\n  Declaration = (function(superClass) {\n    extend(Declaration, superClass);\n\n    function Declaration() {\n      return Declaration.__super__.constructor.apply(this, arguments);\n    }\n\n    Declaration.prototype.check = function(decl) {\n      return true;\n    };\n\n    Declaration.prototype.prefixed = function(prop, prefix) {\n      return prefix + prop;\n    };\n\n    Declaration.prototype.normalize = function(prop) {\n      return prop;\n    };\n\n    Declaration.prototype.otherPrefixes = function(value, prefix) {\n      var j, len, other, ref;\n      ref = Browsers.prefixes();\n      for (j = 0, len = ref.length; j < len; j++) {\n        other = ref[j];\n        if (other === prefix) {\n          continue;\n        }\n        if (value.indexOf(other) !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Declaration.prototype.set = function(decl, prefix) {\n      decl.prop = this.prefixed(decl.prop, prefix);\n      return decl;\n    };\n\n    Declaration.prototype.needCascade = function(decl) {\n      return decl._autoprefixerCascade || (decl._autoprefixerCascade = this.all.options.cascade !== false && decl.raw('before').indexOf('\\n') !== -1);\n    };\n\n    Declaration.prototype.maxPrefixed = function(prefixes, decl) {\n      var j, len, max, prefix;\n      if (decl._autoprefixerMax) {\n        return decl._autoprefixerMax;\n      }\n      max = 0;\n      for (j = 0, len = prefixes.length; j < len; j++) {\n        prefix = prefixes[j];\n        prefix = utils.removeNote(prefix);\n        if (prefix.length > max) {\n          max = prefix.length;\n        }\n      }\n      return decl._autoprefixerMax = max;\n    };\n\n    Declaration.prototype.calcBefore = function(prefixes, decl, prefix) {\n      var before, diff, i, j, max, ref;\n      if (prefix == null) {\n        prefix = '';\n      }\n      before = decl.raw('before');\n      max = this.maxPrefixed(prefixes, decl);\n      diff = max - utils.removeNote(prefix).length;\n      for (i = j = 0, ref = diff; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        before += ' ';\n      }\n      return before;\n    };\n\n    Declaration.prototype.restoreBefore = function(decl) {\n      var lines, min;\n      lines = decl.raw('before').split(\"\\n\");\n      min = lines[lines.length - 1];\n      this.all.group(decl).up(function(prefixed) {\n        var array, last;\n        array = prefixed.raw('before').split(\"\\n\");\n        last = array[array.length - 1];\n        if (last.length < min.length) {\n          return min = last;\n        }\n      });\n      lines[lines.length - 1] = min;\n      return decl.raws.before = lines.join(\"\\n\");\n    };\n\n    Declaration.prototype.insert = function(decl, prefix, prefixes) {\n      var already, cloned;\n      cloned = this.set(this.clone(decl), prefix);\n      if (!cloned) {\n        return;\n      }\n      already = decl.parent.some(function(i) {\n        return i.prop === cloned.prop && i.value === cloned.value;\n      });\n      if (already) {\n        return;\n      }\n      if (this.needCascade(decl)) {\n        cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n      }\n      return decl.parent.insertBefore(decl, cloned);\n    };\n\n    Declaration.prototype.isAlready = function(decl, prefixed) {\n      var already;\n      already = this.all.group(decl).up(function(i) {\n        return i.prop === prefixed;\n      });\n      already || (already = this.all.group(decl).down(function(i) {\n        return i.prop === prefixed;\n      }));\n      return already;\n    };\n\n    Declaration.prototype.add = function(decl, prefix, prefixes) {\n      var prefixed;\n      prefixed = this.prefixed(decl.prop, prefix);\n      if (this.isAlready(decl, prefixed) || this.otherPrefixes(decl.value, prefix)) {\n        return;\n      }\n      return this.insert(decl, prefix, prefixes);\n    };\n\n    Declaration.prototype.process = function(decl) {\n      var prefixes;\n      if (this.needCascade(decl)) {\n        prefixes = Declaration.__super__.process.apply(this, arguments);\n        if (prefixes != null ? prefixes.length : void 0) {\n          this.restoreBefore(decl);\n          return decl.raws.before = this.calcBefore(prefixes, decl);\n        }\n      } else {\n        return Declaration.__super__.process.apply(this, arguments);\n      }\n    };\n\n    Declaration.prototype.old = function(prop, prefix) {\n      return [this.prefixed(prop, prefix)];\n    };\n\n    return Declaration;\n\n  })(Prefixer);\n\n  module.exports = Declaration;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/prefixer.js":"(function() {\n  var Browsers, Prefixer, clone, utils, vendor,\n    hasProp = {}.hasOwnProperty;\n\n  Browsers = require('./browsers');\n\n  utils = require('./utils');\n\n  vendor = require('postcss/lib/vendor');\n\n  clone = function(obj, parent) {\n    var cloned, i, value;\n    cloned = new obj.constructor();\n    for (i in obj) {\n      if (!hasProp.call(obj, i)) continue;\n      value = obj[i];\n      if (i === 'parent' && typeof value === 'object') {\n        if (parent) {\n          cloned[i] = parent;\n        }\n      } else if (i === 'source') {\n        cloned[i] = value;\n      } else if (i === null) {\n        cloned[i] = value;\n      } else if (value instanceof Array) {\n        cloned[i] = value.map(function(i) {\n          return clone(i, cloned);\n        });\n      } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues') {\n        if (typeof value === 'object' && value !== null) {\n          value = clone(value, cloned);\n        }\n        cloned[i] = value;\n      }\n    }\n    return cloned;\n  };\n\n  Prefixer = (function() {\n    Prefixer.hack = function(klass) {\n      var j, len, name, ref, results;\n      this.hacks || (this.hacks = {});\n      ref = klass.names;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        name = ref[j];\n        results.push(this.hacks[name] = klass);\n      }\n      return results;\n    };\n\n    Prefixer.load = function(name, prefixes, all) {\n      var klass, ref;\n      klass = (ref = this.hacks) != null ? ref[name] : void 0;\n      if (klass) {\n        return new klass(name, prefixes, all);\n      } else {\n        return new this(name, prefixes, all);\n      }\n    };\n\n    Prefixer.clone = function(node, overrides) {\n      var cloned, name;\n      cloned = clone(node);\n      for (name in overrides) {\n        cloned[name] = overrides[name];\n      }\n      return cloned;\n    };\n\n    function Prefixer(name1, prefixes1, all1) {\n      this.name = name1;\n      this.prefixes = prefixes1;\n      this.all = all1;\n    }\n\n    Prefixer.prototype.parentPrefix = function(node) {\n      var prefix;\n      prefix = node._autoprefixerPrefix != null ? node._autoprefixerPrefix : node.type === 'decl' && node.prop[0] === '-' ? vendor.prefix(node.prop) : node.type === 'root' ? false : node.type === 'rule' && node.selector.indexOf(':-') !== -1 && /:(-\\w+-)/.test(node.selector) ? node.selector.match(/:(-\\w+-)/)[1] : node.type === 'atrule' && node.name[0] === '-' ? vendor.prefix(node.name) : this.parentPrefix(node.parent);\n      if (Browsers.prefixes().indexOf(prefix) === -1) {\n        prefix = false;\n      }\n      return node._autoprefixerPrefix = prefix;\n    };\n\n    Prefixer.prototype.process = function(node) {\n      var added, j, k, len, len1, parent, prefix, prefixes, ref;\n      if (!this.check(node)) {\n        return;\n      }\n      parent = this.parentPrefix(node);\n      prefixes = [];\n      ref = this.prefixes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        prefix = ref[j];\n        if (parent && parent !== utils.removeNote(prefix)) {\n          continue;\n        }\n        prefixes.push(prefix);\n      }\n      added = [];\n      for (k = 0, len1 = prefixes.length; k < len1; k++) {\n        prefix = prefixes[k];\n        if (this.add(node, prefix, added.concat([prefix]))) {\n          added.push(prefix);\n        }\n      }\n      return added;\n    };\n\n    Prefixer.prototype.clone = function(node, overrides) {\n      return Prefixer.clone(node, overrides);\n    };\n\n    return Prefixer;\n\n  })();\n\n  module.exports = Prefixer;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/resolution.js":"(function() {\n  var Prefixer, Resolution, n2f, regexp, split, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Prefixer = require('./prefixer');\n\n  utils = require('./utils');\n\n  n2f = require('num2fraction');\n\n  regexp = /(min|max)-resolution\\s*:\\s*\\d*\\.?\\d+(dppx|dpi)/gi;\n\n  split = /(min|max)-resolution(\\s*:\\s*)(\\d*\\.?\\d+)(dppx|dpi)/i;\n\n  Resolution = (function(superClass) {\n    extend(Resolution, superClass);\n\n    function Resolution() {\n      return Resolution.__super__.constructor.apply(this, arguments);\n    }\n\n    Resolution.prototype.prefixName = function(prefix, name) {\n      return name = prefix === '-moz-' ? name + '--moz-device-pixel-ratio' : prefix + name + '-device-pixel-ratio';\n    };\n\n    Resolution.prototype.prefixQuery = function(prefix, name, colon, value, units) {\n      if (units === 'dpi') {\n        value = Number(value / 96);\n      }\n      if (prefix === '-o-') {\n        value = n2f(value);\n      }\n      return this.prefixName(prefix, name) + colon + value;\n    };\n\n    Resolution.prototype.clean = function(rule) {\n      var j, len, prefix, ref;\n      if (!this.bad) {\n        this.bad = [];\n        ref = this.prefixes;\n        for (j = 0, len = ref.length; j < len; j++) {\n          prefix = ref[j];\n          this.bad.push(this.prefixName(prefix, 'min'));\n          this.bad.push(this.prefixName(prefix, 'max'));\n        }\n      }\n      return rule.params = utils.editList(rule.params, (function(_this) {\n        return function(queries) {\n          return queries.filter(function(query) {\n            return _this.bad.every(function(i) {\n              return query.indexOf(i) === -1;\n            });\n          });\n        };\n      })(this));\n    };\n\n    Resolution.prototype.process = function(rule) {\n      var parent, prefixes;\n      parent = this.parentPrefix(rule);\n      prefixes = parent ? [parent] : this.prefixes;\n      return rule.params = utils.editList(rule.params, (function(_this) {\n        return function(origin, prefixed) {\n          var j, k, len, len1, prefix, processed, query;\n          for (j = 0, len = origin.length; j < len; j++) {\n            query = origin[j];\n            if (query.indexOf('min-resolution') === -1 && query.indexOf('max-resolution') === -1) {\n              prefixed.push(query);\n              continue;\n            }\n            for (k = 0, len1 = prefixes.length; k < len1; k++) {\n              prefix = prefixes[k];\n              if (prefix === '-moz-' && rule.params.indexOf('dpi') !== -1) {\n                continue;\n              } else {\n                processed = query.replace(regexp, function(str) {\n                  var parts;\n                  parts = str.match(split);\n                  return _this.prefixQuery(prefix, parts[1], parts[2], parts[3], parts[4]);\n                });\n                prefixed.push(processed);\n              }\n            }\n            prefixed.push(query);\n          }\n          return utils.uniq(prefixed);\n        };\n      })(this));\n    };\n\n    return Resolution;\n\n  })(Prefixer);\n\n  module.exports = Resolution;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/transition.js":"(function() {\n  var Transition, list, parser, vendor;\n\n  parser = require('postcss-value-parser');\n\n  vendor = require('postcss/lib/vendor');\n\n  list = require('postcss/lib/list');\n\n  Transition = (function() {\n    function Transition(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Transition.prototype.props = ['transition', 'transition-property'];\n\n    Transition.prototype.add = function(decl, result) {\n      var added, declPrefixes, j, k, l, len, len1, len2, names, operaClean, param, params, prefix, prefixValue, prefixed, prefixer, prop, ref, ref1, value, webkitClean;\n      declPrefixes = ((ref = this.prefixes.add[decl.prop]) != null ? ref.prefixes : void 0) || [];\n      params = this.parse(decl.value);\n      names = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this));\n      added = [];\n      if (names.some(function(i) {\n        return i[0] === '-';\n      })) {\n        return;\n      }\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        if (prop[0] === '-') {\n          continue;\n        }\n        prefixer = this.prefixes.add[prop];\n        if (!(prefixer != null ? prefixer.prefixes : void 0)) {\n          continue;\n        }\n        ref1 = prefixer.prefixes;\n        for (k = 0, len1 = ref1.length; k < len1; k++) {\n          prefix = ref1[k];\n          prefixed = this.prefixes.prefixed(prop, prefix);\n          if (prefixed !== '-ms-transform' && names.indexOf(prefixed) === -1) {\n            if (!this.disabled(prop, prefix)) {\n              added.push(this.clone(prop, prefixed, param));\n            }\n          }\n        }\n      }\n      params = params.concat(added);\n      value = this.stringify(params);\n      webkitClean = this.stringify(this.cleanFromUnprefixed(params, '-webkit-'));\n      if (declPrefixes.indexOf('-webkit-') !== -1) {\n        this.cloneBefore(decl, '-webkit-' + decl.prop, webkitClean);\n      }\n      this.cloneBefore(decl, decl.prop, webkitClean);\n      if (declPrefixes.indexOf('-o-') !== -1) {\n        operaClean = this.stringify(this.cleanFromUnprefixed(params, '-o-'));\n        this.cloneBefore(decl, '-o-' + decl.prop, operaClean);\n      }\n      for (l = 0, len2 = declPrefixes.length; l < len2; l++) {\n        prefix = declPrefixes[l];\n        if (prefix !== '-webkit-' && prefix !== '-o-') {\n          prefixValue = this.stringify(this.cleanOtherPrefixes(params, prefix));\n          this.cloneBefore(decl, prefix + decl.prop, prefixValue);\n        }\n      }\n      if (value !== decl.value && !this.already(decl, decl.prop, value)) {\n        this.checkForWarning(result, decl);\n        decl.cloneBefore();\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.findProp = function(param) {\n      var i, j, len, prop, token;\n      prop = param[0].value;\n      if (/^\\d/.test(prop)) {\n        for (i = j = 0, len = param.length; j < len; i = ++j) {\n          token = param[i];\n          if (i !== 0 && token.type === 'word') {\n            return token.value;\n          }\n        }\n      }\n      return prop;\n    };\n\n    Transition.prototype.already = function(decl, prop, value) {\n      return decl.parent.some(function(i) {\n        return i.prop === prop && i.value === value;\n      });\n    };\n\n    Transition.prototype.cloneBefore = function(decl, prop, value) {\n      if (!this.already(decl, prop, value)) {\n        return decl.cloneBefore({\n          prop: prop,\n          value: value\n        });\n      }\n    };\n\n    Transition.prototype.checkForWarning = function(result, decl) {\n      if (decl.prop === 'transition-property') {\n        return decl.parent.each(function(i) {\n          if (i.type !== 'decl') {\n            return;\n          }\n          if (i.prop.indexOf('transition-') !== 0) {\n            return;\n          }\n          if (i.prop === 'transition-property') {\n            return;\n          }\n          if (list.comma(i.value).length > 1) {\n            decl.warn(result, 'Replace transition-property to transition, ' + 'because Autoprefixer could not support ' + 'any cases of transition-property ' + 'and other transition-*');\n          }\n          return false;\n        });\n      }\n    };\n\n    Transition.prototype.remove = function(decl) {\n      var double, params, smaller, value;\n      params = this.parse(decl.value);\n      params = params.filter((function(_this) {\n        return function(i) {\n          var ref;\n          return !((ref = _this.prefixes.remove[_this.findProp(i)]) != null ? ref.remove : void 0);\n        };\n      })(this));\n      value = this.stringify(params);\n      if (decl.value === value) {\n        return;\n      }\n      if (params.length === 0) {\n        decl.remove();\n        return;\n      }\n      double = decl.parent.some(function(i) {\n        return i.prop === decl.prop && i.value === value;\n      });\n      smaller = decl.parent.some(function(i) {\n        return i !== decl && i.prop === decl.prop && i.value.length > value.length;\n      });\n      if (double || smaller) {\n        return decl.remove();\n      } else {\n        return decl.value = value;\n      }\n    };\n\n    Transition.prototype.parse = function(value) {\n      var ast, j, len, node, param, ref, result;\n      ast = parser(value);\n      result = [];\n      param = [];\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        param.push(node);\n        if (node.type === 'div' && node.value === ',') {\n          result.push(param);\n          param = [];\n        }\n      }\n      result.push(param);\n      return result.filter(function(i) {\n        return i.length > 0;\n      });\n    };\n\n    Transition.prototype.stringify = function(params) {\n      var j, len, nodes, param;\n      if (params.length === 0) {\n        return '';\n      }\n      nodes = [];\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        if (param[param.length - 1].type !== 'div') {\n          param.push(this.div(params));\n        }\n        nodes = nodes.concat(param);\n      }\n      if (nodes[0].type === 'div') {\n        nodes = nodes.slice(1);\n      }\n      if (nodes[nodes.length - 1].type === 'div') {\n        nodes = nodes.slice(0, -1);\n      }\n      return parser.stringify({\n        nodes: nodes\n      });\n    };\n\n    Transition.prototype.clone = function(origin, name, param) {\n      var changed, i, j, len, result;\n      result = [];\n      changed = false;\n      for (j = 0, len = param.length; j < len; j++) {\n        i = param[j];\n        if (!changed && i.type === 'word' && i.value === origin) {\n          result.push({\n            type: 'word',\n            value: name\n          });\n          changed = true;\n        } else {\n          result.push(i);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.div = function(params) {\n      var j, k, len, len1, node, param;\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        for (k = 0, len1 = param.length; k < len1; k++) {\n          node = param[k];\n          if (node.type === 'div' && node.value === ',') {\n            return node;\n          }\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Transition.prototype.cleanOtherPrefixes = function(params, prefix) {\n      return params.filter((function(_this) {\n        return function(param) {\n          var current;\n          current = vendor.prefix(_this.findProp(param));\n          return current === '' || current === prefix;\n        };\n      })(this));\n    };\n\n    Transition.prototype.cleanFromUnprefixed = function(params, prefix) {\n      var j, len, p, param, prop, remove, result;\n      result = [];\n      remove = params.map((function(_this) {\n        return function(i) {\n          return _this.findProp(i);\n        };\n      })(this)).filter(function(i) {\n        return i.slice(0, prefix.length) === prefix;\n      }).map((function(_this) {\n        return function(i) {\n          return _this.prefixes.unprefixed(i);\n        };\n      })(this));\n      for (j = 0, len = params.length; j < len; j++) {\n        param = params[j];\n        prop = this.findProp(param);\n        p = vendor.prefix(prop);\n        if (remove.indexOf(prop) === -1 && (p === prefix || p === '')) {\n          result.push(param);\n        }\n      }\n      return result;\n    };\n\n    Transition.prototype.disabled = function(prop, prefix) {\n      var other;\n      other = ['order', 'justify-content', 'align-self', 'align-content'];\n      if (prop.indexOf('flex') !== -1 || other.indexOf(prop) !== -1) {\n        if (this.prefixes.options.flexbox === false) {\n          return true;\n        } else if (this.prefixes.options.flexbox === 'no-2009') {\n          return prefix.indexOf('2009') !== -1;\n        }\n      }\n    };\n\n    return Transition;\n\n  })();\n\n  module.exports = Transition;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/processor.js":"(function() {\n  var OLD_DIRECTION, Processor, SIZES, Value, utils, vendor;\n\n  vendor = require('postcss/lib/vendor');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  OLD_DIRECTION = /(^|[^-])(linear|radial)-gradient\\(\\s*(top|left|right|bottom)/i;\n\n  SIZES = ['width', 'height', 'min-width', 'max-width', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'];\n\n  Processor = (function() {\n    function Processor(prefixes) {\n      this.prefixes = prefixes;\n    }\n\n    Processor.prototype.add = function(css, result) {\n      var keyframes, resolution, supports, viewport;\n      resolution = this.prefixes.add['@resolution'];\n      keyframes = this.prefixes.add['@keyframes'];\n      viewport = this.prefixes.add['@viewport'];\n      supports = this.prefixes.add['@supports'];\n      css.walkAtRules((function(_this) {\n        return function(rule) {\n          if (rule.name === 'keyframes') {\n            if (!_this.disabled(rule)) {\n              return keyframes != null ? keyframes.process(rule) : void 0;\n            }\n          } else if (rule.name === 'viewport') {\n            if (!_this.disabled(rule)) {\n              return viewport != null ? viewport.process(rule) : void 0;\n            }\n          } else if (rule.name === 'supports') {\n            if (_this.prefixes.options.supports !== false && !_this.disabled(rule)) {\n              return supports.process(rule);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            if (!_this.disabled(rule)) {\n              return resolution != null ? resolution.process(rule) : void 0;\n            }\n          }\n        };\n      })(this));\n      css.walkRules((function(_this) {\n        return function(rule) {\n          var j, len, ref, results, selector;\n          if (_this.disabled(rule)) {\n            return;\n          }\n          ref = _this.prefixes.add.selectors;\n          results = [];\n          for (j = 0, len = ref.length; j < len; j++) {\n            selector = ref[j];\n            results.push(selector.process(rule, result));\n          }\n          return results;\n        };\n      })(this));\n      css.walkDecls((function(_this) {\n        return function(decl) {\n          var display, prefixer;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          if (decl.prop === 'display' && decl.value === 'box') {\n            result.warn('You should write display: flex by final spec ' + 'instead of display: box', {\n              node: decl\n            });\n            return;\n          }\n          if (decl.value.indexOf('linear-gradient') !== -1) {\n            if (OLD_DIRECTION.test(decl.value)) {\n              result.warn('Gradient has outdated direction syntax. ' + 'New syntax is like `to left` instead of `right`.', {\n                node: decl\n              });\n            }\n          }\n          if (decl.prop === 'text-emphasis-position') {\n            if (decl.value === 'under' || decl.value === 'over') {\n              result.warn('You should use 2 values for text-emphasis-position ' + 'For example, `under left` instead of just `under`.', {\n                node: decl\n              });\n            }\n          }\n          if (SIZES.indexOf(decl.prop) !== -1) {\n            if (decl.value.indexOf('fill-available') !== -1) {\n              result.warn('Replace fill-available to stretch, ' + 'because spec had been changed', {\n                node: decl\n              });\n            } else if (decl.value.indexOf('fill') !== -1) {\n              result.warn('Replace fill to stretch, because spec had been changed', {\n                node: decl\n              });\n            }\n          }\n          if (_this.prefixes.options.flexbox !== false) {\n            if (decl.prop === 'grid-row-end' && decl.value.indexOf('span') === -1) {\n              result.warn('IE supports only grid-row-end with span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                node: decl\n              });\n            }\n            if (decl.prop === 'grid-row') {\n              if (decl.value.indexOf('/') !== -1 && decl.value.indexOf('span') === -1) {\n                result.warn('IE supports only grid-row with / and span. ' + 'You should add grid: false option to Autoprefixer ' + 'and use some JS grid polyfill for full spec support', {\n                  node: decl\n                });\n              }\n            }\n          }\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            return _this.prefixes.transition.add(decl, result);\n          } else if (decl.prop === 'align-self') {\n            display = _this.displayType(decl);\n            if (display !== 'grid' && _this.prefixes.options.flexbox !== false) {\n              prefixer = _this.prefixes.add['align-self'];\n              if (prefixer && prefixer.prefixes) {\n                prefixer.process(decl);\n              }\n            }\n            if (display !== 'flex' && _this.prefixes.options.grid !== false) {\n              prefixer = _this.prefixes.add['grid-row-align'];\n              if (prefixer && prefixer.prefixes) {\n                return prefixer.process(decl);\n              }\n            }\n          } else {\n            prefixer = _this.prefixes.add[decl.prop];\n            if (prefixer && prefixer.prefixes) {\n              return prefixer.process(decl);\n            }\n          }\n        };\n      })(this));\n      return css.walkDecls((function(_this) {\n        return function(decl) {\n          var j, len, ref, unprefixed, value;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          ref = _this.prefixes.values('add', unprefixed);\n          for (j = 0, len = ref.length; j < len; j++) {\n            value = ref[j];\n            value.process(decl, result);\n          }\n          return Value.save(_this.prefixes, decl);\n        };\n      })(this));\n    };\n\n    Processor.prototype.remove = function(css) {\n      var checker, j, len, ref, resolution;\n      resolution = this.prefixes.remove['@resolution'];\n      css.walkAtRules((function(_this) {\n        return function(rule, i) {\n          if (_this.prefixes.remove['@' + rule.name]) {\n            if (!_this.disabled(rule)) {\n              return rule.parent.removeChild(i);\n            }\n          } else if (rule.name === 'media' && rule.params.indexOf('-resolution') !== -1) {\n            return resolution != null ? resolution.clean(rule) : void 0;\n          }\n        };\n      })(this));\n      ref = this.prefixes.remove.selectors;\n      for (j = 0, len = ref.length; j < len; j++) {\n        checker = ref[j];\n        css.walkRules((function(_this) {\n          return function(rule, i) {\n            if (checker.check(rule)) {\n              if (!_this.disabled(rule)) {\n                return rule.parent.removeChild(i);\n              }\n            }\n          };\n        })(this));\n      }\n      return css.walkDecls((function(_this) {\n        return function(decl, i) {\n          var k, len1, notHack, ref1, ref2, rule, unprefixed;\n          if (_this.disabled(decl)) {\n            return;\n          }\n          rule = decl.parent;\n          unprefixed = _this.prefixes.unprefixed(decl.prop);\n          if (decl.prop === 'transition' || decl.prop === 'transition-property') {\n            _this.prefixes.transition.remove(decl);\n          }\n          if ((ref1 = _this.prefixes.remove[decl.prop]) != null ? ref1.remove : void 0) {\n            notHack = _this.prefixes.group(decl).down(function(other) {\n              return _this.prefixes.normalize(other.prop) === unprefixed;\n            });\n            if (unprefixed === 'flex-flow') {\n              notHack = true;\n            }\n            if (notHack && !_this.withHackValue(decl)) {\n              if (decl.raw('before').indexOf(\"\\n\") > -1) {\n                _this.reduceSpaces(decl);\n              }\n              rule.removeChild(i);\n              return;\n            }\n          }\n          ref2 = _this.prefixes.values('remove', unprefixed);\n          for (k = 0, len1 = ref2.length; k < len1; k++) {\n            checker = ref2[k];\n            if (checker.check(decl.value)) {\n              unprefixed = checker.unprefixed;\n              notHack = _this.prefixes.group(decl).down(function(other) {\n                return other.value.indexOf(unprefixed) !== -1;\n              });\n              if (notHack) {\n                rule.removeChild(i);\n                return;\n              } else if (checker.clean) {\n                checker.clean(decl);\n                return;\n              }\n            }\n          }\n        };\n      })(this));\n    };\n\n    Processor.prototype.withHackValue = function(decl) {\n      return decl.prop === '-webkit-background-clip' && decl.value === 'text';\n    };\n\n    Processor.prototype.disabled = function(node) {\n      var other, status;\n      if (this.prefixes.options.grid === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.prefixes.options.flexbox === false && node.type === 'decl') {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      if (node._autoprefixerDisabled != null) {\n        return node._autoprefixerDisabled;\n      } else if (node.nodes) {\n        status = void 0;\n        node.each(function(i) {\n          if (i.type !== 'comment') {\n            return;\n          }\n          if (/(!\\s*)?autoprefixer:\\s*off/i.test(i.text)) {\n            status = false;\n            return false;\n          } else if (/(!\\s*)?autoprefixer:\\s*on/i.test(i.text)) {\n            status = true;\n            return false;\n          }\n        });\n        return node._autoprefixerDisabled = status != null ? !status : node.parent ? this.disabled(node.parent) : false;\n      } else if (node.parent) {\n        return node._autoprefixerDisabled = this.disabled(node.parent);\n      } else {\n        return false;\n      }\n    };\n\n    Processor.prototype.reduceSpaces = function(decl) {\n      var diff, parts, prevMin, stop;\n      stop = false;\n      this.prefixes.group(decl).up(function(other) {\n        return stop = true;\n      });\n      if (stop) {\n        return;\n      }\n      parts = decl.raw('before').split(\"\\n\");\n      prevMin = parts[parts.length - 1].length;\n      diff = false;\n      return this.prefixes.group(decl).down(function(other) {\n        var last;\n        parts = other.raw('before').split(\"\\n\");\n        last = parts.length - 1;\n        if (parts[last].length > prevMin) {\n          if (diff === false) {\n            diff = parts[last].length - prevMin;\n          }\n          parts[last] = parts[last].slice(0, -diff);\n          return other.raws.before = parts.join(\"\\n\");\n        }\n      });\n    };\n\n    Processor.prototype.displayType = function(decl) {\n      var i, j, len, ref;\n      ref = decl.parent.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.prop === 'display') {\n          if (i.value.indexOf('flex') !== -1) {\n            return 'flex';\n          } else if (i.value.indexOf('grid') !== -1) {\n            return 'grid';\n          }\n        }\n      }\n      return false;\n    };\n\n    return Processor;\n\n  })();\n\n  module.exports = Processor;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/value.js":"(function() {\n  var OldValue, Prefixer, Value, utils, vendor,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Prefixer = require('./prefixer');\n\n  OldValue = require('./old-value');\n\n  utils = require('./utils');\n\n  vendor = require('postcss/lib/vendor');\n\n  Value = (function(superClass) {\n    extend(Value, superClass);\n\n    function Value() {\n      return Value.__super__.constructor.apply(this, arguments);\n    }\n\n    Value.save = function(prefixes, decl) {\n      var already, cloned, prefix, prefixed, prop, propPrefix, ref, results, rule, trimmed, value;\n      prop = decl.prop;\n      ref = decl._autoprefixerValues;\n      results = [];\n      for (prefix in ref) {\n        value = ref[prefix];\n        if (value === decl.value) {\n          continue;\n        }\n        propPrefix = vendor.prefix(prop);\n        if (propPrefix === prefix) {\n          results.push(decl.value = value);\n        } else if (propPrefix === '-pie-') {\n          continue;\n        } else {\n          prefixed = prefixes.prefixed(prop, prefix);\n          rule = decl.parent;\n          if (rule.every(function(i) {\n            return i.prop !== prefixed;\n          })) {\n            trimmed = value.replace(/\\s+/, ' ');\n            already = rule.some(function(i) {\n              return i.prop === decl.prop && i.value.replace(/\\s+/, ' ') === trimmed;\n            });\n            if (!already) {\n              cloned = this.clone(decl, {\n                value: value\n              });\n              results.push(decl.parent.insertBefore(decl, cloned));\n            } else {\n              results.push(void 0);\n            }\n          } else {\n            results.push(void 0);\n          }\n        }\n      }\n      return results;\n    };\n\n    Value.prototype.check = function(decl) {\n      var value;\n      value = decl.value;\n      if (value.indexOf(this.name) !== -1) {\n        return !!value.match(this.regexp());\n      } else {\n        return false;\n      }\n    };\n\n    Value.prototype.regexp = function() {\n      return this.regexpCache || (this.regexpCache = utils.regexp(this.name));\n    };\n\n    Value.prototype.replace = function(string, prefix) {\n      return string.replace(this.regexp(), '$1' + prefix + '$2');\n    };\n\n    Value.prototype.value = function(decl) {\n      if (decl.raws.value && decl.raws.value.value === decl.value) {\n        return decl.raws.value.raw;\n      } else {\n        return decl.value;\n      }\n    };\n\n    Value.prototype.add = function(decl, prefix) {\n      var value;\n      decl._autoprefixerValues || (decl._autoprefixerValues = {});\n      value = decl._autoprefixerValues[prefix] || this.value(decl);\n      value = this.replace(value, prefix);\n      if (value) {\n        return decl._autoprefixerValues[prefix] = value;\n      }\n    };\n\n    Value.prototype.old = function(prefix) {\n      return new OldValue(this.name, prefix + this.name);\n    };\n\n    return Value;\n\n  })(Prefixer);\n\n  module.exports = Value;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/old-value.js":"(function() {\n  var OldValue, utils;\n\n  utils = require('./utils');\n\n  OldValue = (function() {\n    function OldValue(unprefixed, prefixed, string, regexp) {\n      this.unprefixed = unprefixed;\n      this.prefixed = prefixed;\n      this.string = string;\n      this.regexp = regexp;\n      this.regexp || (this.regexp = utils.regexp(this.prefixed));\n      this.string || (this.string = this.prefixed);\n    }\n\n    OldValue.prototype.check = function(value) {\n      if (value.indexOf(this.string) !== -1) {\n        return !!value.match(this.regexp);\n      } else {\n        return false;\n      }\n    };\n\n    return OldValue;\n\n  })();\n\n  module.exports = OldValue;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/supports.js":"(function() {\n  var Browsers, Supports, Value, brackets, browser, data, postcss, ref, support, supported, utils, version, versions;\n\n  Browsers = require('./browsers');\n\n  brackets = require('./brackets');\n\n  Value = require('./value');\n\n  utils = require('./utils');\n\n  postcss = require('postcss');\n\n  supported = [];\n\n  data = require('caniuse-db/features-json/css-featurequeries.json');\n\n  ref = data.stats;\n  for (browser in ref) {\n    versions = ref[browser];\n    for (version in versions) {\n      support = versions[version];\n      if (/y/.test(support)) {\n        supported.push(browser + ' ' + version);\n      }\n    }\n  }\n\n  Supports = (function() {\n    function Supports(Prefixes, all1) {\n      this.Prefixes = Prefixes;\n      this.all = all1;\n    }\n\n    Supports.prototype.prefixer = function() {\n      var browsers, filtered;\n      if (this.prefixerCache) {\n        return this.prefixerCache;\n      }\n      filtered = this.all.browsers.selected.filter((function(_this) {\n        return function(i) {\n          return supported.indexOf(i) !== -1;\n        };\n      })(this));\n      browsers = new Browsers(this.all.browsers.data, filtered, this.all.options);\n      return this.prefixerCache = new this.Prefixes(this.all.data, browsers, this.all.options);\n    };\n\n    Supports.prototype.parse = function(str) {\n      var prop, ref1, value;\n      ref1 = str.split(':'), prop = ref1[0], value = ref1[1];\n      value || (value = '');\n      return [prop.trim(), value.trim()];\n    };\n\n    Supports.prototype.virtual = function(str) {\n      var prop, ref1, rule, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      rule = postcss.parse('a{}').first;\n      rule.append({\n        prop: prop,\n        value: value,\n        raws: {\n          before: ''\n        }\n      });\n      return rule;\n    };\n\n    Supports.prototype.prefixed = function(str) {\n      var decl, j, k, len, len1, prefixer, ref1, ref2, rule, value;\n      rule = this.virtual(str);\n      if (this.disabled(rule.first)) {\n        return rule.nodes;\n      }\n      prefixer = this.prefixer().add[rule.first.prop];\n      if (prefixer != null) {\n        if (typeof prefixer.process === \"function\") {\n          prefixer.process(rule.first);\n        }\n      }\n      ref1 = rule.nodes;\n      for (j = 0, len = ref1.length; j < len; j++) {\n        decl = ref1[j];\n        ref2 = this.prefixer().values('add', rule.first.prop);\n        for (k = 0, len1 = ref2.length; k < len1; k++) {\n          value = ref2[k];\n          value.process(decl);\n        }\n        Value.save(this.all, decl);\n      }\n      return rule.nodes;\n    };\n\n    Supports.prototype.isNot = function(node) {\n      return typeof node === 'string' && /not\\s*/i.test(node);\n    };\n\n    Supports.prototype.isOr = function(node) {\n      return typeof node === 'string' && /\\s*or\\s*/i.test(node);\n    };\n\n    Supports.prototype.isProp = function(node) {\n      return typeof node === 'object' && node.length === 1 && typeof node[0] === 'string';\n    };\n\n    Supports.prototype.isHack = function(all, unprefixed) {\n      var check;\n      check = new RegExp('(\\\\(|\\\\s)' + utils.escapeRegexp(unprefixed) + ':');\n      return !check.test(all);\n    };\n\n    Supports.prototype.toRemove = function(str, all) {\n      var checker, j, len, prop, ref1, ref2, ref3, unprefixed, value;\n      ref1 = this.parse(str), prop = ref1[0], value = ref1[1];\n      unprefixed = this.all.unprefixed(prop);\n      if (((ref2 = this.all.cleaner().remove[prop]) != null ? ref2.remove : void 0) && !this.isHack(all, unprefixed)) {\n        return true;\n      }\n      ref3 = this.all.cleaner().values('remove', unprefixed);\n      for (j = 0, len = ref3.length; j < len; j++) {\n        checker = ref3[j];\n        if (checker.check(value)) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    Supports.prototype.remove = function(nodes, all) {\n      var i;\n      i = 0;\n      while (i < nodes.length) {\n        if (!this.isNot(nodes[i - 1]) && this.isProp(nodes[i]) && this.isOr(nodes[i + 1])) {\n          if (this.toRemove(nodes[i][0], all)) {\n            nodes.splice(i, 2);\n          } else {\n            i += 2;\n          }\n        } else {\n          if (typeof nodes[i] === 'object') {\n            nodes[i] = this.remove(nodes[i], all);\n          }\n          i += 1;\n        }\n      }\n      return nodes;\n    };\n\n    Supports.prototype.cleanBrackets = function(nodes) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          if (typeof i === 'object') {\n            if (i.length === 1 && typeof i[0] === 'object') {\n              return _this.cleanBrackets(i[0]);\n            } else {\n              return _this.cleanBrackets(i);\n            }\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.convert = function(progress) {\n      var i, j, len, result;\n      result = [''];\n      for (j = 0, len = progress.length; j < len; j++) {\n        i = progress[j];\n        result.push([i.prop + \": \" + i.value]);\n        result.push(' or ');\n      }\n      result[result.length - 1] = '';\n      return result;\n    };\n\n    Supports.prototype.normalize = function(nodes) {\n      if (typeof nodes === 'object') {\n        nodes = nodes.filter(function(i) {\n          return i !== '';\n        });\n        if (typeof nodes[0] === 'string' && nodes[0].indexOf(':') !== -1) {\n          return [brackets.stringify(nodes)];\n        } else {\n          return nodes.map((function(_this) {\n            return function(i) {\n              return _this.normalize(i);\n            };\n          })(this));\n        }\n      } else {\n        return nodes;\n      }\n    };\n\n    Supports.prototype.add = function(nodes, all) {\n      return nodes.map((function(_this) {\n        return function(i) {\n          var prefixed;\n          if (_this.isProp(i)) {\n            prefixed = _this.prefixed(i[0]);\n            if (prefixed.length > 1) {\n              return _this.convert(prefixed);\n            } else {\n              return i;\n            }\n          } else if (typeof i === 'object') {\n            return _this.add(i, all);\n          } else {\n            return i;\n          }\n        };\n      })(this));\n    };\n\n    Supports.prototype.process = function(rule) {\n      var ast;\n      ast = brackets.parse(rule.params);\n      ast = this.normalize(ast);\n      ast = this.remove(ast, rule.params);\n      ast = this.add(ast, rule.params);\n      ast = this.cleanBrackets(ast);\n      return rule.params = brackets.stringify(ast);\n    };\n\n    Supports.prototype.disabled = function(node) {\n      var other;\n      if (this.all.options.grid === false) {\n        if (node.prop === 'display' && node.value.indexOf('grid') !== -1) {\n          return true;\n        }\n        if (node.prop.indexOf('grid') !== -1 || node.prop === 'justify-items') {\n          return true;\n        }\n      }\n      if (this.all.options.flexbox === false) {\n        if (node.prop === 'display' && node.value.indexOf('flex') !== -1) {\n          return true;\n        }\n        other = ['order', 'justify-content', 'align-items', 'align-content'];\n        if (node.prop.indexOf('flex') !== -1 || other.indexOf(node.prop) !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    return Supports;\n\n  })();\n\n  module.exports = Supports;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/brackets.js":"(function() {\n  var brackets, last;\n\n  last = function(array) {\n    return array[array.length - 1];\n  };\n\n  brackets = {\n    parse: function(str) {\n      var current, j, len, stack, sym;\n      current = [''];\n      stack = [current];\n      for (j = 0, len = str.length; j < len; j++) {\n        sym = str[j];\n        if (sym === '(') {\n          current = [''];\n          last(stack).push(current);\n          stack.push(current);\n        } else if (sym === ')') {\n          stack.pop();\n          current = last(stack);\n          current.push('');\n        } else {\n          current[current.length - 1] += sym;\n        }\n      }\n      return stack[0];\n    },\n    stringify: function(ast) {\n      var i, j, len, result;\n      result = '';\n      for (j = 0, len = ast.length; j < len; j++) {\n        i = ast[j];\n        if (typeof i === 'object') {\n          result += '(' + brackets.stringify(i) + ')';\n        } else {\n          result += i;\n        }\n      }\n      return result;\n    }\n  };\n\n  module.exports = brackets;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/selector.js":"(function() {\n  var Browsers, OldSelector, Prefixer, Selector, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldSelector = require('./old-selector');\n\n  Prefixer = require('./prefixer');\n\n  Browsers = require('./browsers');\n\n  utils = require('./utils');\n\n  Selector = (function(superClass) {\n    extend(Selector, superClass);\n\n    function Selector(name1, prefixes, all) {\n      this.name = name1;\n      this.prefixes = prefixes;\n      this.all = all;\n      this.regexpCache = {};\n    }\n\n    Selector.prototype.check = function(rule) {\n      if (rule.selector.indexOf(this.name) !== -1) {\n        return !!rule.selector.match(this.regexp());\n      } else {\n        return false;\n      }\n    };\n\n    Selector.prototype.prefixed = function(prefix) {\n      return this.name.replace(/^([^\\w]*)/, '$1' + prefix);\n    };\n\n    Selector.prototype.regexp = function(prefix) {\n      var name;\n      if (this.regexpCache[prefix]) {\n        return this.regexpCache[prefix];\n      }\n      name = prefix ? this.prefixed(prefix) : this.name;\n      return this.regexpCache[prefix] = RegExp(\"(^|[^:\\\"'=])\" + (utils.escapeRegexp(name)), \"gi\");\n    };\n\n    Selector.prototype.possible = function() {\n      return Browsers.prefixes();\n    };\n\n    Selector.prototype.prefixeds = function(rule) {\n      var i, len, prefix, prefixeds, ref;\n      if (rule._autoprefixerPrefixeds) {\n        return rule._autoprefixerPrefixeds;\n      }\n      prefixeds = {};\n      ref = this.possible();\n      for (i = 0, len = ref.length; i < len; i++) {\n        prefix = ref[i];\n        prefixeds[prefix] = this.replace(rule.selector, prefix);\n      }\n      return rule._autoprefixerPrefixeds = prefixeds;\n    };\n\n    Selector.prototype.already = function(rule, prefixeds, prefix) {\n      var before, index, key, prefixed, some;\n      index = rule.parent.index(rule) - 1;\n      while (index >= 0) {\n        before = rule.parent.nodes[index];\n        if (before.type !== 'rule') {\n          return false;\n        }\n        some = false;\n        for (key in prefixeds) {\n          prefixed = prefixeds[key];\n          if (before.selector === prefixed) {\n            if (prefix === key) {\n              return true;\n            } else {\n              some = true;\n              break;\n            }\n          }\n        }\n        if (!some) {\n          return false;\n        }\n        index -= 1;\n      }\n      return false;\n    };\n\n    Selector.prototype.replace = function(selector, prefix) {\n      return selector.replace(this.regexp(), '$1' + this.prefixed(prefix));\n    };\n\n    Selector.prototype.add = function(rule, prefix) {\n      var cloned, prefixeds;\n      prefixeds = this.prefixeds(rule);\n      if (this.already(rule, prefixeds, prefix)) {\n        return;\n      }\n      cloned = this.clone(rule, {\n        selector: prefixeds[prefix]\n      });\n      return rule.parent.insertBefore(rule, cloned);\n    };\n\n    Selector.prototype.old = function(prefix) {\n      return new OldSelector(this, prefix);\n    };\n\n    return Selector;\n\n  })(Prefixer);\n\n  module.exports = Selector;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/old-selector.js":"(function() {\n  var OldSelector;\n\n  OldSelector = (function() {\n    function OldSelector(selector, prefix1) {\n      var i, len, prefix, ref;\n      this.prefix = prefix1;\n      this.prefixed = selector.prefixed(this.prefix);\n      this.regexp = selector.regexp(this.prefix);\n      this.prefixeds = [];\n      ref = selector.possible();\n      for (i = 0, len = ref.length; i < len; i++) {\n        prefix = ref[i];\n        this.prefixeds.push([selector.prefixed(prefix), selector.regexp(prefix)]);\n      }\n      this.unprefixed = selector.name;\n      this.nameRegexp = selector.regexp();\n    }\n\n    OldSelector.prototype.isHack = function(rule) {\n      var before, i, index, len, ref, ref1, regexp, rules, some, string;\n      index = rule.parent.index(rule) + 1;\n      rules = rule.parent.nodes;\n      while (index < rules.length) {\n        before = rules[index].selector;\n        if (!before) {\n          return true;\n        }\n        if (before.indexOf(this.unprefixed) !== -1 && before.match(this.nameRegexp)) {\n          return false;\n        }\n        some = false;\n        ref = this.prefixeds;\n        for (i = 0, len = ref.length; i < len; i++) {\n          ref1 = ref[i], string = ref1[0], regexp = ref1[1];\n          if (before.indexOf(string) !== -1 && before.match(regexp)) {\n            some = true;\n            break;\n          }\n        }\n        if (!some) {\n          return true;\n        }\n        index += 1;\n      }\n      return true;\n    };\n\n    OldSelector.prototype.check = function(rule) {\n      if (rule.selector.indexOf(this.prefixed) === -1) {\n        return false;\n      }\n      if (!rule.selector.match(this.regexp)) {\n        return false;\n      }\n      if (this.isHack(rule)) {\n        return false;\n      }\n      return true;\n    };\n\n    return OldSelector;\n\n  })();\n\n  module.exports = OldSelector;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/at-rule.js":"(function() {\n  var AtRule, Prefixer,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Prefixer = require('./prefixer');\n\n  AtRule = (function(superClass) {\n    extend(AtRule, superClass);\n\n    function AtRule() {\n      return AtRule.__super__.constructor.apply(this, arguments);\n    }\n\n    AtRule.prototype.add = function(rule, prefix) {\n      var already, cloned, prefixed;\n      prefixed = prefix + rule.name;\n      already = rule.parent.some(function(i) {\n        return i.name === prefixed && i.params === rule.params;\n      });\n      if (already) {\n        return;\n      }\n      cloned = this.clone(rule, {\n        name: prefixed\n      });\n      return rule.parent.insertBefore(rule, cloned);\n    };\n\n    AtRule.prototype.process = function(node) {\n      var j, len, parent, prefix, ref, results;\n      parent = this.parentPrefix(node);\n      ref = this.prefixes;\n      results = [];\n      for (j = 0, len = ref.length; j < len; j++) {\n        prefix = ref[j];\n        if (parent && parent !== prefix) {\n          continue;\n        }\n        results.push(this.add(node, prefix));\n      }\n      return results;\n    };\n\n    return AtRule;\n\n  })(Prefixer);\n\n  module.exports = AtRule;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/fullscreen.js":"(function() {\n  var Fullscreen, Selector,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Selector = require('../selector');\n\n  Fullscreen = (function(superClass) {\n    extend(Fullscreen, superClass);\n\n    function Fullscreen() {\n      return Fullscreen.__super__.constructor.apply(this, arguments);\n    }\n\n    Fullscreen.names = [':fullscreen'];\n\n    Fullscreen.prototype.prefixed = function(prefix) {\n      if ('-webkit-' === prefix) {\n        return ':-webkit-full-screen';\n      } else if ('-moz-' === prefix) {\n        return ':-moz-full-screen';\n      } else {\n        return \":\" + prefix + \"fullscreen\";\n      }\n    };\n\n    return Fullscreen;\n\n  })(Selector);\n\n  module.exports = Fullscreen;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/placeholder.js":"(function() {\n  var Placeholder, Selector,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Selector = require('../selector');\n\n  Placeholder = (function(superClass) {\n    extend(Placeholder, superClass);\n\n    function Placeholder() {\n      return Placeholder.__super__.constructor.apply(this, arguments);\n    }\n\n    Placeholder.names = [':placeholder-shown', '::placeholder'];\n\n    Placeholder.prototype.possible = function() {\n      return Placeholder.__super__.possible.apply(this, arguments).concat('-moz- old');\n    };\n\n    Placeholder.prototype.prefixed = function(prefix) {\n      if ('-webkit-' === prefix) {\n        return '::-webkit-input-placeholder';\n      } else if ('-ms-' === prefix) {\n        return ':-ms-input-placeholder';\n      } else if ('-moz- old' === prefix) {\n        return ':-moz-placeholder';\n      } else {\n        return \"::\" + prefix + \"placeholder\";\n      }\n    };\n\n    return Placeholder;\n\n  })(Selector);\n\n  module.exports = Placeholder;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex.js":"(function() {\n  var Declaration, Flex, flexSpec, list,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  list = require('postcss/lib/list');\n\n  Flex = (function(superClass) {\n    extend(Flex, superClass);\n\n    function Flex() {\n      return Flex.__super__.constructor.apply(this, arguments);\n    }\n\n    Flex.names = ['flex', 'box-flex'];\n\n    Flex.oldValues = {\n      'auto': '1',\n      'none': '0'\n    };\n\n    Flex.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-flex';\n      } else {\n        return Flex.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    Flex.prototype.normalize = function() {\n      return 'flex';\n    };\n\n    Flex.prototype.set = function(decl, prefix) {\n      var components, spec;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2009) {\n        decl.value = list.space(decl.value)[0];\n        decl.value = Flex.oldValues[decl.value] || decl.value;\n        return Flex.__super__.set.call(this, decl, prefix);\n      } else if (spec === 2012) {\n        components = list.space(decl.value);\n        if (components.length === 3 && components[2] === '0') {\n          decl.value = components.slice(0, 2).concat('0px').join(' ');\n        }\n        return Flex.__super__.set.call(this, decl, prefix);\n      } else {\n        return Flex.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return Flex;\n\n  })(Declaration);\n\n  module.exports = Flex;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-spec.js":"(function() {\n  module.exports = function(prefix) {\n    var spec;\n    spec = prefix === '-webkit- 2009' || prefix === '-moz-' ? 2009 : prefix === '-ms-' ? 2012 : prefix === '-webkit-' ? 'final' : void 0;\n    if (prefix === '-webkit- 2009') {\n      prefix = '-webkit-';\n    }\n    return [spec, prefix];\n  };\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/order.js":"(function() {\n  var Declaration, Order, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  Order = (function(superClass) {\n    extend(Order, superClass);\n\n    function Order() {\n      return Order.__super__.constructor.apply(this, arguments);\n    }\n\n    Order.names = ['order', 'flex-order', 'box-ordinal-group'];\n\n    Order.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-ordinal-group';\n      } else if (spec === 2012) {\n        return prefix + 'flex-order';\n      } else {\n        return Order.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    Order.prototype.normalize = function(prop) {\n      return 'order';\n    };\n\n    Order.prototype.set = function(decl, prefix) {\n      var spec;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2009 && /\\d/.test(decl.value)) {\n        decl.value = (parseInt(decl.value) + 1).toString();\n        return Order.__super__.set.call(this, decl, prefix);\n      } else {\n        return Order.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return Order;\n\n  })(Declaration);\n\n  module.exports = Order;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/filter.js":"(function() {\n  var Declaration, Filter,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  Filter = (function(superClass) {\n    extend(Filter, superClass);\n\n    function Filter() {\n      return Filter.__super__.constructor.apply(this, arguments);\n    }\n\n    Filter.names = ['filter'];\n\n    Filter.prototype.check = function(decl) {\n      var v;\n      v = decl.value;\n      return v.toLowerCase().indexOf('alpha(') === -1 && v.indexOf('DXImageTransform.Microsoft') === -1 && v.indexOf('data:image/svg+xml') === -1;\n    };\n\n    return Filter;\n\n  })(Declaration);\n\n  module.exports = Filter;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/grid-end.js":"(function() {\n  var Declaration, GridEnd,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  GridEnd = (function(superClass) {\n    extend(GridEnd, superClass);\n\n    function GridEnd() {\n      return GridEnd.__super__.constructor.apply(this, arguments);\n    }\n\n    GridEnd.names = ['grid-row-end', 'grid-column-end', 'grid-row-span', 'grid-column-span'];\n\n    GridEnd.prototype.check = function(decl) {\n      return decl.value.indexOf('span') !== -1;\n    };\n\n    GridEnd.prototype.normalize = function(prop) {\n      return prop.replace(/(-span|-end)/, '');\n    };\n\n    GridEnd.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('-end', '-span');\n      } else {\n        return GridEnd.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridEnd.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-') {\n        decl.value = decl.value.replace(/span\\s/i, '');\n      }\n      return GridEnd.__super__.set.call(this, decl, prefix);\n    };\n\n    return GridEnd;\n\n  })(Declaration);\n\n  module.exports = GridEnd;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-flow.js":"(function() {\n  var Declaration, FlexFlow, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexFlow = (function(superClass) {\n    extend(FlexFlow, superClass);\n\n    function FlexFlow() {\n      return FlexFlow.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexFlow.names = ['flex-flow', 'box-direction', 'box-orient'];\n\n    FlexFlow.prototype.insert = function(decl, prefix, prefixes) {\n      var already, cloned, dir, orient, ref, spec, value, values;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec !== 2009) {\n        return FlexFlow.__super__.insert.apply(this, arguments);\n      } else {\n        values = decl.value.split(/\\s+/).filter(function(i) {\n          return i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse';\n        });\n        if (values.length === 0) {\n          return;\n        }\n        already = decl.parent.some(function(i) {\n          return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';\n        });\n        if (already) {\n          return;\n        }\n        value = values[0];\n        orient = value.indexOf('row') !== -1 ? 'horizontal' : 'vertical';\n        dir = value.indexOf('reverse') !== -1 ? 'reverse' : 'normal';\n        cloned = this.clone(decl);\n        cloned.prop = prefix + 'box-orient';\n        cloned.value = orient;\n        if (this.needCascade(decl)) {\n          cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        decl.parent.insertBefore(decl, cloned);\n        cloned = this.clone(decl);\n        cloned.prop = prefix + 'box-direction';\n        cloned.value = dir;\n        if (this.needCascade(decl)) {\n          cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n      }\n    };\n\n    return FlexFlow;\n\n  })(Declaration);\n\n  module.exports = FlexFlow;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-grow.js":"(function() {\n  var Declaration, Flex, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  Flex = (function(superClass) {\n    extend(Flex, superClass);\n\n    function Flex() {\n      return Flex.__super__.constructor.apply(this, arguments);\n    }\n\n    Flex.names = ['flex-grow', 'flex-positive'];\n\n    Flex.prototype.normalize = function() {\n      return 'flex';\n    };\n\n    Flex.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-flex';\n      } else if (spec === 2012) {\n        return prefix + 'flex-positive';\n      } else {\n        return Flex.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    return Flex;\n\n  })(Declaration);\n\n  module.exports = Flex;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-wrap.js":"(function() {\n  var Declaration, FlexWrap, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexWrap = (function(superClass) {\n    extend(FlexWrap, superClass);\n\n    function FlexWrap() {\n      return FlexWrap.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexWrap.names = ['flex-wrap'];\n\n    FlexWrap.prototype.set = function(decl, prefix) {\n      var spec;\n      spec = flexSpec(prefix)[0];\n      if (spec !== 2009) {\n        return FlexWrap.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return FlexWrap;\n\n  })(Declaration);\n\n  module.exports = FlexWrap;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/grid-start.js":"(function() {\n  var Declaration, GridStart,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  GridStart = (function(superClass) {\n    extend(GridStart, superClass);\n\n    function GridStart() {\n      return GridStart.__super__.constructor.apply(this, arguments);\n    }\n\n    GridStart.names = ['grid-row-start', 'grid-column-start', 'grid-row', 'grid-column'];\n\n    GridStart.prototype.check = function(decl) {\n      return decl.value.indexOf('/') === -1 || decl.value.indexOf('span') !== -1;\n    };\n\n    GridStart.prototype.normalize = function(prop) {\n      return prop.replace('-start', '');\n    };\n\n    GridStart.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('-start', '');\n      } else {\n        return GridStart.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridStart.prototype.insert = function(decl, prefix, prefixes) {\n      var parts;\n      parts = this.splitValue(decl, prefix);\n      if (parts.length === 2) {\n        decl.cloneBefore({\n          prop: '-ms-' + decl.prop + '-span',\n          value: parts[1]\n        });\n      }\n      return GridStart.__super__.insert.call(this, decl, prefix, prefixes);\n    };\n\n    GridStart.prototype.set = function(decl, prefix) {\n      var parts;\n      parts = this.splitValue(decl, prefix);\n      if (parts.length === 2) {\n        decl.value = parts[0];\n      }\n      return GridStart.__super__.set.call(this, decl, prefix);\n    };\n\n    GridStart.prototype.splitValue = function(decl, prefix) {\n      var parts;\n      if (prefix === '-ms-' && decl.prop.indexOf('-start') === -1) {\n        parts = decl.value.split(/\\s*\\/\\s*span\\s+/);\n        if (parts.length === 2) {\n          return parts;\n        }\n      }\n      return false;\n    };\n\n    return GridStart;\n\n  })(Declaration);\n\n  module.exports = GridStart;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/align-self.js":"(function() {\n  var AlignSelf, Declaration, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  AlignSelf = (function(superClass) {\n    extend(AlignSelf, superClass);\n\n    function AlignSelf() {\n      return AlignSelf.__super__.constructor.apply(this, arguments);\n    }\n\n    AlignSelf.names = ['align-self', 'flex-item-align'];\n\n    AlignSelf.oldValues = {\n      'flex-end': 'end',\n      'flex-start': 'start'\n    };\n\n    AlignSelf.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-item-align';\n      } else {\n        return AlignSelf.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    AlignSelf.prototype.normalize = function(prop) {\n      return 'align-self';\n    };\n\n    AlignSelf.prototype.set = function(decl, prefix) {\n      var spec;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2012) {\n        decl.value = AlignSelf.oldValues[decl.value] || decl.value;\n        return AlignSelf.__super__.set.call(this, decl, prefix);\n      } else if (spec === 'final') {\n        return AlignSelf.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return AlignSelf;\n\n  })(Declaration);\n\n  module.exports = AlignSelf;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-basis.js":"(function() {\n  var Declaration, FlexBasis, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexBasis = (function(superClass) {\n    extend(FlexBasis, superClass);\n\n    function FlexBasis() {\n      return FlexBasis.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexBasis.names = ['flex-basis', 'flex-preferred-size'];\n\n    FlexBasis.prototype.normalize = function() {\n      return 'flex-basis';\n    };\n\n    FlexBasis.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-preferred-size';\n      } else {\n        return FlexBasis.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    FlexBasis.prototype.set = function(decl, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012 || spec === 'final') {\n        return FlexBasis.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return FlexBasis;\n\n  })(Declaration);\n\n  module.exports = FlexBasis;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/mask-border.js":"(function() {\n  var Declaration, MaskBorder,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  MaskBorder = (function(superClass) {\n    extend(MaskBorder, superClass);\n\n    function MaskBorder() {\n      return MaskBorder.__super__.constructor.apply(this, arguments);\n    }\n\n    MaskBorder.names = ['mask-border', 'mask-border-source', 'mask-border-slice', 'mask-border-width', 'mask-border-outset', 'mask-border-repeat', 'mask-box-image', 'mask-box-image-source', 'mask-box-image-slice', 'mask-box-image-width', 'mask-box-image-outset', 'mask-box-image-repeat'];\n\n    MaskBorder.prototype.normalize = function() {\n      return this.name.replace('box-image', 'border');\n    };\n\n    MaskBorder.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-webkit-') {\n        return MaskBorder.__super__.prefixed.apply(this, arguments).replace('border', 'box-image');\n      } else {\n        return MaskBorder.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    return MaskBorder;\n\n  })(Declaration);\n\n  module.exports = MaskBorder;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/align-items.js":"(function() {\n  var AlignItems, Declaration, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  AlignItems = (function(superClass) {\n    extend(AlignItems, superClass);\n\n    function AlignItems() {\n      return AlignItems.__super__.constructor.apply(this, arguments);\n    }\n\n    AlignItems.names = ['align-items', 'flex-align', 'box-align'];\n\n    AlignItems.oldValues = {\n      'flex-end': 'end',\n      'flex-start': 'start'\n    };\n\n    AlignItems.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-align';\n      } else if (spec === 2012) {\n        return prefix + 'flex-align';\n      } else {\n        return AlignItems.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    AlignItems.prototype.normalize = function(prop) {\n      return 'align-items';\n    };\n\n    AlignItems.prototype.set = function(decl, prefix) {\n      var spec;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2009 || spec === 2012) {\n        decl.value = AlignItems.oldValues[decl.value] || decl.value;\n        return AlignItems.__super__.set.call(this, decl, prefix);\n      } else {\n        return AlignItems.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return AlignItems;\n\n  })(Declaration);\n\n  module.exports = AlignItems;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-shrink.js":"(function() {\n  var Declaration, FlexShrink, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexShrink = (function(superClass) {\n    extend(FlexShrink, superClass);\n\n    function FlexShrink() {\n      return FlexShrink.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexShrink.names = ['flex-shrink', 'flex-negative'];\n\n    FlexShrink.prototype.normalize = function() {\n      return 'flex-shrink';\n    };\n\n    FlexShrink.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-negative';\n      } else {\n        return FlexShrink.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    FlexShrink.prototype.set = function(decl, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012 || spec === 'final') {\n        return FlexShrink.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return FlexShrink;\n\n  })(Declaration);\n\n  module.exports = FlexShrink;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/break-props.js":"(function() {\n  var BreakProps, Declaration,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  BreakProps = (function(superClass) {\n    extend(BreakProps, superClass);\n\n    function BreakProps() {\n      return BreakProps.__super__.constructor.apply(this, arguments);\n    }\n\n    BreakProps.names = ['break-inside', 'page-break-inside', 'column-break-inside', 'break-before', 'page-break-before', 'column-break-before', 'break-after', 'page-break-after', 'column-break-after'];\n\n    BreakProps.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-webkit-') {\n        return '-webkit-column-' + prop;\n      } else if (prefix === '-moz-') {\n        return 'page-' + prop;\n      } else {\n        return BreakProps.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    BreakProps.prototype.normalize = function(prop) {\n      if (prop.indexOf('inside') !== -1) {\n        return 'break-inside';\n      } else if (prop.indexOf('before') !== -1) {\n        return 'break-before';\n      } else if (prop.indexOf('after') !== -1) {\n        return 'break-after';\n      }\n    };\n\n    BreakProps.prototype.set = function(decl, prefix) {\n      var v;\n      v = decl.value;\n      if (decl.prop === 'break-inside' && v === 'avoid-column' || v === 'avoid-page') {\n        decl.value = 'avoid';\n      }\n      return BreakProps.__super__.set.apply(this, arguments);\n    };\n\n    BreakProps.prototype.insert = function(decl, prefix, prefixes) {\n      if (decl.prop !== 'break-inside') {\n        return BreakProps.__super__.insert.apply(this, arguments);\n      } else if (decl.value === 'avoid-region') {\n\n      } else if (decl.value === 'avoid-page' && prefix === '-webkit-') {\n\n      } else {\n        return BreakProps.__super__.insert.apply(this, arguments);\n      }\n    };\n\n    return BreakProps;\n\n  })(Declaration);\n\n  module.exports = BreakProps;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/writing-mode.js":"(function() {\n  var Declaration, WritingMode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  WritingMode = (function(superClass) {\n    extend(WritingMode, superClass);\n\n    function WritingMode() {\n      return WritingMode.__super__.constructor.apply(this, arguments);\n    }\n\n    WritingMode.names = ['writing-mode'];\n\n    WritingMode.msValues = {\n      'horizontal-tb': 'lr-tb',\n      'vertical-rl': 'tb-rl',\n      'vertical-lr': 'tb-lr'\n    };\n\n    WritingMode.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-') {\n        decl.value = WritingMode.msValues[decl.value] || decl.value;\n        return WritingMode.__super__.set.call(this, decl, prefix);\n      } else {\n        return WritingMode.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return WritingMode;\n\n  })(Declaration);\n\n  module.exports = WritingMode;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/border-image.js":"(function() {\n  var BorderImage, Declaration,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  BorderImage = (function(superClass) {\n    extend(BorderImage, superClass);\n\n    function BorderImage() {\n      return BorderImage.__super__.constructor.apply(this, arguments);\n    }\n\n    BorderImage.names = ['border-image'];\n\n    BorderImage.prototype.set = function(decl, prefix) {\n      decl.value = decl.value.replace(/\\s+fill(\\s)/, '$1');\n      return BorderImage.__super__.set.call(this, decl, prefix);\n    };\n\n    return BorderImage;\n\n  })(Declaration);\n\n  module.exports = BorderImage;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/justify-items.js":"(function() {\n  var Declaration, JustifyItems,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  JustifyItems = (function(superClass) {\n    extend(JustifyItems, superClass);\n\n    function JustifyItems() {\n      return JustifyItems.__super__.constructor.apply(this, arguments);\n    }\n\n    JustifyItems.names = ['justify-items', 'grid-column-align'];\n\n    JustifyItems.prototype.prefixed = function(prop, prefix) {\n      return prefix + (prefix === '-ms-' ? 'grid-column-align' : prop);\n    };\n\n    JustifyItems.prototype.normalize = function(prop) {\n      return 'justify-items';\n    };\n\n    return JustifyItems;\n\n  })(Declaration);\n\n  module.exports = JustifyItems;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/align-content.js":"(function() {\n  var AlignContent, Declaration, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  AlignContent = (function(superClass) {\n    extend(AlignContent, superClass);\n\n    function AlignContent() {\n      return AlignContent.__super__.constructor.apply(this, arguments);\n    }\n\n    AlignContent.names = ['align-content', 'flex-line-pack'];\n\n    AlignContent.oldValues = {\n      'flex-end': 'end',\n      'flex-start': 'start',\n      'space-between': 'justify',\n      'space-around': 'distribute'\n    };\n\n    AlignContent.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2012) {\n        return prefix + 'flex-line-pack';\n      } else {\n        return AlignContent.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    AlignContent.prototype.normalize = function(prop) {\n      return 'align-content';\n    };\n\n    AlignContent.prototype.set = function(decl, prefix) {\n      var spec;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2012) {\n        decl.value = AlignContent.oldValues[decl.value] || decl.value;\n        return AlignContent.__super__.set.call(this, decl, prefix);\n      } else if (spec === 'final') {\n        return AlignContent.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return AlignContent;\n\n  })(Declaration);\n\n  module.exports = AlignContent;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/border-radius.js":"(function() {\n  var BorderRadius, Declaration,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  BorderRadius = (function(superClass) {\n    var hor, i, j, len, len1, mozilla, normal, ref, ref1, ver;\n\n    extend(BorderRadius, superClass);\n\n    function BorderRadius() {\n      return BorderRadius.__super__.constructor.apply(this, arguments);\n    }\n\n    BorderRadius.names = ['border-radius'];\n\n    BorderRadius.toMozilla = {};\n\n    BorderRadius.toNormal = {};\n\n    ref = ['top', 'bottom'];\n    for (i = 0, len = ref.length; i < len; i++) {\n      ver = ref[i];\n      ref1 = ['left', 'right'];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        hor = ref1[j];\n        normal = \"border-\" + ver + \"-\" + hor + \"-radius\";\n        mozilla = \"border-radius-\" + ver + hor;\n        BorderRadius.names.push(normal);\n        BorderRadius.names.push(mozilla);\n        BorderRadius.toMozilla[normal] = mozilla;\n        BorderRadius.toNormal[mozilla] = normal;\n      }\n    }\n\n    BorderRadius.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-moz-') {\n        return prefix + (BorderRadius.toMozilla[prop] || prop);\n      } else {\n        return BorderRadius.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    BorderRadius.prototype.normalize = function(prop) {\n      return BorderRadius.toNormal[prop] || prop;\n    };\n\n    return BorderRadius;\n\n  })(Declaration);\n\n  module.exports = BorderRadius;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/block-logical.js":"(function() {\n  var BlockLogical, Declaration,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  BlockLogical = (function(superClass) {\n    extend(BlockLogical, superClass);\n\n    function BlockLogical() {\n      return BlockLogical.__super__.constructor.apply(this, arguments);\n    }\n\n    BlockLogical.names = ['border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', 'border-before', 'border-after', 'margin-before', 'margin-after', 'padding-before', 'padding-after'];\n\n    BlockLogical.prototype.prefixed = function(prop, prefix) {\n      return prefix + (prop.indexOf('-start') !== -1 ? prop.replace('-block-start', '-before') : prop.replace('-block-end', '-after'));\n    };\n\n    BlockLogical.prototype.normalize = function(prop) {\n      if (prop.indexOf('-before') !== -1) {\n        return prop.replace('-before', '-block-start');\n      } else {\n        return prop.replace('-after', '-block-end');\n      }\n    };\n\n    return BlockLogical;\n\n  })(Declaration);\n\n  module.exports = BlockLogical;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/grid-template.js":"(function() {\n  var Declaration, GridTemplate, parser,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  parser = require('postcss-value-parser');\n\n  Declaration = require('../declaration');\n\n  GridTemplate = (function(superClass) {\n    extend(GridTemplate, superClass);\n\n    function GridTemplate() {\n      return GridTemplate.__super__.constructor.apply(this, arguments);\n    }\n\n    GridTemplate.names = ['grid-template-rows', 'grid-template-columns', 'grid-rows', 'grid-columns'];\n\n    GridTemplate.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return prefix + prop.replace('template-', '');\n      } else {\n        return GridTemplate.__super__.prefixed.call(this, prop, prefix);\n      }\n    };\n\n    GridTemplate.prototype.normalize = function(prop) {\n      return prop.replace(/^grid-(rows|columns)/, 'grid-template-$1');\n    };\n\n    GridTemplate.prototype.walkRepeat = function(node) {\n      var count, first, fixed, i, j, len, ref;\n      fixed = [];\n      ref = node.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        i = ref[j];\n        if (i.nodes) {\n          this.walkRepeat(i);\n        }\n        fixed.push(i);\n        if (i.type === 'function' && i.value === 'repeat') {\n          first = i.nodes.shift();\n          if (first) {\n            count = first.value;\n            i.nodes.shift();\n            i.value = '';\n            fixed.push({\n              type: 'word',\n              value: \"[\" + count + \"]\"\n            });\n          }\n        }\n      }\n      return node.nodes = fixed;\n    };\n\n    GridTemplate.prototype.changeRepeat = function(value) {\n      var ast;\n      ast = parser(value);\n      this.walkRepeat(ast);\n      return ast.toString();\n    };\n\n    GridTemplate.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-' && decl.value.indexOf('repeat(') !== -1) {\n        decl.value = this.changeRepeat(decl.value);\n      }\n      return GridTemplate.__super__.set.call(this, decl, prefix);\n    };\n\n    return GridTemplate;\n\n  })(Declaration);\n\n  module.exports = GridTemplate;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/inline-logical.js":"(function() {\n  var Declaration, InlineLogical,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  InlineLogical = (function(superClass) {\n    extend(InlineLogical, superClass);\n\n    function InlineLogical() {\n      return InlineLogical.__super__.constructor.apply(this, arguments);\n    }\n\n    InlineLogical.names = ['border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', 'border-start', 'border-end', 'margin-start', 'margin-end', 'padding-start', 'padding-end'];\n\n    InlineLogical.prototype.prefixed = function(prop, prefix) {\n      return prefix + prop.replace('-inline', '');\n    };\n\n    InlineLogical.prototype.normalize = function(prop) {\n      return prop.replace(/(margin|padding|border)-(start|end)/, '$1-inline-$2');\n    };\n\n    return InlineLogical;\n\n  })(Declaration);\n\n  module.exports = InlineLogical;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/grid-row-align.js":"(function() {\n  var Declaration, GridRowAlign,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  GridRowAlign = (function(superClass) {\n    extend(GridRowAlign, superClass);\n\n    function GridRowAlign() {\n      return GridRowAlign.__super__.constructor.apply(this, arguments);\n    }\n\n    GridRowAlign.names = ['grid-row-align'];\n\n    GridRowAlign.prototype.check = function(decl) {\n      return decl.value.indexOf('flex-') === -1 && decl.value !== 'baseline';\n    };\n\n    GridRowAlign.prototype.prefixed = function(prop, prefix) {\n      return prefix + 'grid-row-align';\n    };\n\n    GridRowAlign.prototype.normalize = function(prop) {\n      return 'align-self';\n    };\n\n    return GridRowAlign;\n\n  })(Declaration);\n\n  module.exports = GridRowAlign;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/transform-decl.js":"(function() {\n  var Declaration, TransformDecl,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  TransformDecl = (function(superClass) {\n    extend(TransformDecl, superClass);\n\n    function TransformDecl() {\n      return TransformDecl.__super__.constructor.apply(this, arguments);\n    }\n\n    TransformDecl.names = ['transform', 'transform-origin'];\n\n    TransformDecl.functions3d = ['matrix3d', 'translate3d', 'translateZ', 'scale3d', 'scaleZ', 'rotate3d', 'rotateX', 'rotateY', 'perspective'];\n\n    TransformDecl.prototype.keyframeParents = function(decl) {\n      var parent;\n      parent = decl.parent;\n      while (parent) {\n        if (parent.type === 'atrule' && parent.name === 'keyframes') {\n          return true;\n        }\n        parent = parent.parent;\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.contain3d = function(decl) {\n      var func, i, len, ref;\n      if (decl.prop === 'transform-origin') {\n        return false;\n      }\n      ref = TransformDecl.functions3d;\n      for (i = 0, len = ref.length; i < len; i++) {\n        func = ref[i];\n        if (decl.value.indexOf(func + \"(\") !== -1) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    TransformDecl.prototype.set = function(decl, prefix) {\n      decl = TransformDecl.__super__.set.apply(this, arguments);\n      if (prefix === '-ms-') {\n        decl.value = decl.value.replace(/rotateZ/gi, 'rotate');\n      }\n      return decl;\n    };\n\n    TransformDecl.prototype.insert = function(decl, prefix, prefixes) {\n      if (prefix === '-ms-') {\n        if (!this.contain3d(decl) && !this.keyframeParents(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else if (prefix === '-o-') {\n        if (!this.contain3d(decl)) {\n          return TransformDecl.__super__.insert.apply(this, arguments);\n        }\n      } else {\n        return TransformDecl.__super__.insert.apply(this, arguments);\n      }\n    };\n\n    return TransformDecl;\n\n  })(Declaration);\n\n  module.exports = TransformDecl;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-direction.js":"(function() {\n  var Declaration, FlexDirection, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  FlexDirection = (function(superClass) {\n    extend(FlexDirection, superClass);\n\n    function FlexDirection() {\n      return FlexDirection.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexDirection.names = ['flex-direction', 'box-direction', 'box-orient'];\n\n    FlexDirection.prototype.normalize = function(prop) {\n      return 'flex-direction';\n    };\n\n    FlexDirection.prototype.insert = function(decl, prefix, prefixes) {\n      var already, cloned, dir, orient, ref, spec, value;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec !== 2009) {\n        return FlexDirection.__super__.insert.apply(this, arguments);\n      } else {\n        already = decl.parent.some(function(i) {\n          return i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction';\n        });\n        if (already) {\n          return;\n        }\n        value = decl.value;\n        orient = value.indexOf('row') !== -1 ? 'horizontal' : 'vertical';\n        dir = value.indexOf('reverse') !== -1 ? 'reverse' : 'normal';\n        cloned = this.clone(decl);\n        cloned.prop = prefix + 'box-orient';\n        cloned.value = orient;\n        if (this.needCascade(decl)) {\n          cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        decl.parent.insertBefore(decl, cloned);\n        cloned = this.clone(decl);\n        cloned.prop = prefix + 'box-direction';\n        cloned.value = dir;\n        if (this.needCascade(decl)) {\n          cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n        }\n        return decl.parent.insertBefore(decl, cloned);\n      }\n    };\n\n    FlexDirection.prototype.old = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return [prefix + 'box-orient', prefix + 'box-direction'];\n      } else {\n        return FlexDirection.__super__.old.apply(this, arguments);\n      }\n    };\n\n    return FlexDirection;\n\n  })(Declaration);\n\n  module.exports = FlexDirection;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/image-rendering.js":"(function() {\n  var Declaration, ImageRendering,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  ImageRendering = (function(superClass) {\n    extend(ImageRendering, superClass);\n\n    function ImageRendering() {\n      return ImageRendering.__super__.constructor.apply(this, arguments);\n    }\n\n    ImageRendering.names = ['image-rendering', 'interpolation-mode'];\n\n    ImageRendering.prototype.check = function(decl) {\n      return decl.value === 'pixelated';\n    };\n\n    ImageRendering.prototype.prefixed = function(prop, prefix) {\n      if (prefix === '-ms-') {\n        return '-ms-interpolation-mode';\n      } else {\n        return ImageRendering.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    ImageRendering.prototype.set = function(decl, prefix) {\n      if (prefix === '-ms-') {\n        decl.prop = '-ms-interpolation-mode';\n        decl.value = 'nearest-neighbor';\n        return decl;\n      } else {\n        return ImageRendering.__super__.set.apply(this, arguments);\n      }\n    };\n\n    ImageRendering.prototype.normalize = function(prop) {\n      return 'image-rendering';\n    };\n\n    ImageRendering.prototype.process = function(node, result) {\n      return ImageRendering.__super__.process.apply(this, arguments);\n    };\n\n    return ImageRendering;\n\n  })(Declaration);\n\n  module.exports = ImageRendering;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/justify-content.js":"(function() {\n  var Declaration, JustifyContent, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  Declaration = require('../declaration');\n\n  JustifyContent = (function(superClass) {\n    extend(JustifyContent, superClass);\n\n    function JustifyContent() {\n      return JustifyContent.__super__.constructor.apply(this, arguments);\n    }\n\n    JustifyContent.names = ['justify-content', 'flex-pack', 'box-pack'];\n\n    JustifyContent.oldValues = {\n      'flex-end': 'end',\n      'flex-start': 'start',\n      'space-between': 'justify',\n      'space-around': 'distribute'\n    };\n\n    JustifyContent.prototype.prefixed = function(prop, prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      if (spec === 2009) {\n        return prefix + 'box-pack';\n      } else if (spec === 2012) {\n        return prefix + 'flex-pack';\n      } else {\n        return JustifyContent.__super__.prefixed.apply(this, arguments);\n      }\n    };\n\n    JustifyContent.prototype.normalize = function(prop) {\n      return 'justify-content';\n    };\n\n    JustifyContent.prototype.set = function(decl, prefix) {\n      var spec, value;\n      spec = flexSpec(prefix)[0];\n      if (spec === 2009 || spec === 2012) {\n        value = JustifyContent.oldValues[decl.value] || decl.value;\n        decl.value = value;\n        if (spec !== 2009 || value !== 'distribute') {\n          return JustifyContent.__super__.set.call(this, decl, prefix);\n        }\n      } else if (spec === 'final') {\n        return JustifyContent.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return JustifyContent;\n\n  })(Declaration);\n\n  module.exports = JustifyContent;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/background-size.js":"(function() {\n  var BackgroundSize, Declaration,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  BackgroundSize = (function(superClass) {\n    extend(BackgroundSize, superClass);\n\n    function BackgroundSize() {\n      return BackgroundSize.__super__.constructor.apply(this, arguments);\n    }\n\n    BackgroundSize.names = ['background-size'];\n\n    BackgroundSize.prototype.set = function(decl, prefix) {\n      var value;\n      value = decl.value.toLowerCase();\n      if (prefix === '-webkit-' && value.indexOf(' ') === -1 && value !== 'contain' && value !== 'cover') {\n        decl.value = decl.value + ' ' + decl.value;\n      }\n      return BackgroundSize.__super__.set.call(this, decl, prefix);\n    };\n\n    return BackgroundSize;\n\n  })(Declaration);\n\n  module.exports = BackgroundSize;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/text-emphasis-position.js":"(function() {\n  var Declaration, TextEmphasisPosition,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  Declaration = require('../declaration');\n\n  TextEmphasisPosition = (function(superClass) {\n    extend(TextEmphasisPosition, superClass);\n\n    function TextEmphasisPosition() {\n      return TextEmphasisPosition.__super__.constructor.apply(this, arguments);\n    }\n\n    TextEmphasisPosition.names = ['text-emphasis-position'];\n\n    TextEmphasisPosition.prototype.set = function(decl, prefix) {\n      if (prefix === '-webkit-') {\n        decl.value = decl.value.replace(/\\s*(right|left)\\s*/i, '');\n        return TextEmphasisPosition.__super__.set.call(this, decl, prefix);\n      } else {\n        return TextEmphasisPosition.__super__.set.apply(this, arguments);\n      }\n    };\n\n    return TextEmphasisPosition;\n\n  })(Declaration);\n\n  module.exports = TextEmphasisPosition;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/stretch.js":"(function() {\n  var OldValue, Stretch, Value,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  Stretch = (function(superClass) {\n    extend(Stretch, superClass);\n\n    function Stretch() {\n      return Stretch.__super__.constructor.apply(this, arguments);\n    }\n\n    Stretch.names = ['stretch', 'fill', 'fill-available'];\n\n    Stretch.prototype.replace = function(string, prefix) {\n      if (prefix === '-moz-') {\n        return string.replace(this.regexp(), '$1-moz-available$3');\n      } else if (prefix === '-webkit-') {\n        return string.replace(this.regexp(), '$1-webkit-fill-available$3');\n      } else {\n        return Stretch.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    Stretch.prototype.old = function(prefix) {\n      if (prefix === '-moz-') {\n        return new OldValue(this.name, '-moz-available');\n      } else if (prefix === '-webkit-') {\n        return new OldValue(this.name, '-webkit-fill-available');\n      } else {\n        return Stretch.__super__.old.apply(this, arguments);\n      }\n    };\n\n    return Stretch;\n\n  })(Value);\n\n  module.exports = Stretch;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/gradient.js":"(function() {\n  var Gradient, OldValue, Value, isDirection, list, parser, range, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty,\n    slice = [].slice;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  parser = require('postcss-value-parser');\n\n  range = require('normalize-range');\n\n  list = require('postcss/lib/list');\n\n  isDirection = /top|left|right|bottom/gi;\n\n  Gradient = (function(superClass) {\n    extend(Gradient, superClass);\n\n    function Gradient() {\n      return Gradient.__super__.constructor.apply(this, arguments);\n    }\n\n    Gradient.names = ['linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient'];\n\n    Gradient.prototype.replace = function(string, prefix) {\n      var ast, changes, j, len, node, ref;\n      ast = parser(string);\n      ref = ast.nodes;\n      for (j = 0, len = ref.length; j < len; j++) {\n        node = ref[j];\n        if (node.type === 'function' && node.value === this.name) {\n          node.nodes = this.newDirection(node.nodes);\n          node.nodes = this.normalize(node.nodes);\n          if (prefix === '-webkit- old') {\n            changes = this.oldWebkit(node);\n            if (!changes) {\n              return;\n            }\n          } else {\n            node.nodes = this.convertDirection(node.nodes);\n            node.value = prefix + node.value;\n          }\n        }\n      }\n      return ast.toString();\n    };\n\n    Gradient.prototype.directions = {\n      top: 'bottom',\n      left: 'right',\n      bottom: 'top',\n      right: 'left'\n    };\n\n    Gradient.prototype.oldDirections = {\n      'top': 'left bottom, left top',\n      'left': 'right top, left top',\n      'bottom': 'left top, left bottom',\n      'right': 'left top, right top',\n      'top right': 'left bottom, right top',\n      'top left': 'right bottom, left top',\n      'right top': 'left bottom, right top',\n      'right bottom': 'left top, right bottom',\n      'bottom right': 'left top, right bottom',\n      'bottom left': 'right top, left bottom',\n      'left top': 'right bottom, left top',\n      'left bottom': 'right top, left bottom'\n    };\n\n    Gradient.prototype.replaceFirst = function() {\n      var params, prefix, words;\n      params = arguments[0], words = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n      prefix = words.map(function(i) {\n        if (i === ' ') {\n          return {\n            type: 'space',\n            value: i\n          };\n        } else {\n          return {\n            type: 'word',\n            value: i\n          };\n        }\n      });\n      return prefix.concat(params.slice(1));\n    };\n\n    Gradient.prototype.normalizeUnit = function(str, full) {\n      var deg, num;\n      num = parseFloat(str);\n      deg = (num / full) * 360;\n      return deg + \"deg\";\n    };\n\n    Gradient.prototype.normalize = function(nodes) {\n      var num;\n      if (!nodes[0]) {\n        return nodes;\n      }\n      if (/-?\\d+(.\\d+)?grad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 400);\n      } else if (/-?\\d+(.\\d+)?rad/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 2 * Math.PI);\n      } else if (/-?\\d+(.\\d+)?turn/.test(nodes[0].value)) {\n        nodes[0].value = this.normalizeUnit(nodes[0].value, 1);\n      } else if (nodes[0].value.indexOf('deg') !== -1) {\n        num = parseFloat(nodes[0].value);\n        num = range.wrap(0, 360, num);\n        nodes[0].value = num + \"deg\";\n      }\n      if (nodes[0].value === '0deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'top');\n      } else if (nodes[0].value === '90deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'right');\n      } else if (nodes[0].value === '180deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'bottom');\n      } else if (nodes[0].value === '270deg') {\n        nodes = this.replaceFirst(nodes, 'to', ' ', 'left');\n      }\n      return nodes;\n    };\n\n    Gradient.prototype.newDirection = function(params) {\n      var i, j, ref;\n      if (params[0].value === 'to') {\n        return params;\n      }\n      if (!isDirection.test(params[0].value)) {\n        return params;\n      }\n      params.unshift({\n        type: 'word',\n        value: 'to'\n      }, {\n        type: 'space',\n        value: ' '\n      });\n      for (i = j = 2, ref = params.length; 2 <= ref ? j < ref : j > ref; i = 2 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          params[i].value = this.revertDirection(params[i].value);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.convertDirection = function(params) {\n      if (params.length > 0) {\n        if (params[0].value === 'to') {\n          this.fixDirection(params);\n        } else if (params[0].value.indexOf('deg') !== -1) {\n          this.fixAngle(params);\n        } else if (params[2].value === 'at') {\n          this.fixRadial(params);\n        }\n      }\n      return params;\n    };\n\n    Gradient.prototype.fixDirection = function(params) {\n      var i, j, ref, results;\n      params.splice(0, 2);\n      results = [];\n      for (i = j = 0, ref = params.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        }\n        if (params[i].type === 'word') {\n          results.push(params[i].value = this.revertDirection(params[i].value));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.fixAngle = function(params) {\n      var first;\n      first = params[0].value;\n      first = parseFloat(first);\n      first = Math.abs(450 - first) % 360;\n      first = this.roundFloat(first, 3);\n      return params[0].value = first + \"deg\";\n    };\n\n    Gradient.prototype.fixRadial = function(params) {\n      var first, i, j, ref, second;\n      first = params[0];\n      second = [];\n      for (i = j = 4, ref = params.length; 4 <= ref ? j < ref : j > ref; i = 4 <= ref ? ++j : --j) {\n        if (params[i].type === 'div') {\n          break;\n        } else {\n          second.push(params[i]);\n        }\n      }\n      return params.splice.apply(params, [0, i].concat(slice.call(second), [params[i + 2]], [first]));\n    };\n\n    Gradient.prototype.revertDirection = function(word) {\n      return this.directions[word.toLowerCase()] || word;\n    };\n\n    Gradient.prototype.roundFloat = function(float, digits) {\n      return parseFloat(float.toFixed(digits));\n    };\n\n    Gradient.prototype.oldWebkit = function(node) {\n      var i, j, k, len, len1, nodes, param, params, string;\n      nodes = node.nodes;\n      string = parser.stringify(node.nodes);\n      if (this.name !== 'linear-gradient') {\n        return false;\n      }\n      if (nodes[0] && nodes[0].value.indexOf('deg') !== -1) {\n        return false;\n      }\n      if (string.indexOf('px') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-corner') !== -1) {\n        return false;\n      }\n      if (string.indexOf('-side') !== -1) {\n        return false;\n      }\n      params = [[]];\n      for (j = 0, len = nodes.length; j < len; j++) {\n        i = nodes[j];\n        params[params.length - 1].push(i);\n        if (i.type === 'div' && i.value === ',') {\n          params.push([]);\n        }\n      }\n      this.oldDirection(params);\n      this.colorStops(params);\n      node.nodes = [];\n      for (k = 0, len1 = params.length; k < len1; k++) {\n        param = params[k];\n        node.nodes = node.nodes.concat(param);\n      }\n      node.nodes.unshift({\n        type: 'word',\n        value: 'linear'\n      }, this.cloneDiv(node.nodes));\n      node.value = '-webkit-gradient';\n      return true;\n    };\n\n    Gradient.prototype.oldDirection = function(params) {\n      var div, j, len, node, old, ref, words;\n      div = this.cloneDiv(params[0]);\n      if (params[0][0].value !== 'to') {\n        return params.unshift([\n          {\n            type: 'word',\n            value: this.oldDirections.bottom\n          }, div\n        ]);\n      } else {\n        words = [];\n        ref = params[0].slice(2);\n        for (j = 0, len = ref.length; j < len; j++) {\n          node = ref[j];\n          if (node.type === 'word') {\n            words.push(node.value.toLowerCase());\n          }\n        }\n        words = words.join(' ');\n        old = this.oldDirections[words] || words;\n        return params[0] = [\n          {\n            type: 'word',\n            value: old\n          }, div\n        ];\n      }\n    };\n\n    Gradient.prototype.cloneDiv = function(params) {\n      var i, j, len;\n      for (j = 0, len = params.length; j < len; j++) {\n        i = params[j];\n        if (i.type === 'div' && i.value === ',') {\n          return i;\n        }\n      }\n      return {\n        type: 'div',\n        value: ',',\n        after: ' '\n      };\n    };\n\n    Gradient.prototype.colorStops = function(params) {\n      var color, div, i, j, len, param, pos, results, stop;\n      results = [];\n      for (i = j = 0, len = params.length; j < len; i = ++j) {\n        param = params[i];\n        if (i === 0) {\n          continue;\n        }\n        color = parser.stringify(param[0]);\n        if (param[1] && param[1].type === 'word') {\n          pos = param[1].value;\n        } else if (param[2] && param[2].type === 'word') {\n          pos = param[2].value;\n        }\n        stop = i === 1 && (!pos || pos === '0%') ? \"from(\" + color + \")\" : i === params.length - 1 && (!pos || pos === '100%') ? \"to(\" + color + \")\" : pos ? \"color-stop(\" + pos + \", \" + color + \")\" : \"color-stop(\" + color + \")\";\n        div = param[param.length - 1];\n        params[i] = [\n          {\n            type: 'word',\n            value: stop\n          }\n        ];\n        if (div.type === 'div' && div.value === ',') {\n          results.push(params[i].push(div));\n        } else {\n          results.push(void 0);\n        }\n      }\n      return results;\n    };\n\n    Gradient.prototype.old = function(prefix) {\n      var regexp, string, type;\n      if (prefix === '-webkit-') {\n        type = this.name === 'linear-gradient' ? 'linear' : 'radial';\n        string = '-gradient';\n        regexp = utils.regexp(\"-webkit-(\" + type + \"-gradient|gradient\\\\(\\\\s*\" + type + \")\", false);\n        return new OldValue(this.name, prefix + this.name, string, regexp);\n      } else {\n        return Gradient.__super__.old.apply(this, arguments);\n      }\n    };\n\n    Gradient.prototype.add = function(decl, prefix) {\n      var p;\n      p = decl.prop;\n      if (p.indexOf('mask') !== -1) {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else if (p === 'list-style' || p === 'list-style-image' || p === 'content') {\n        if (prefix === '-webkit-' || prefix === '-webkit- old') {\n          return Gradient.__super__.add.apply(this, arguments);\n        }\n      } else {\n        return Gradient.__super__.add.apply(this, arguments);\n      }\n    };\n\n    return Gradient;\n\n  })(Value);\n\n  module.exports = Gradient;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/pixelated.js":"(function() {\n  var OldValue, Pixelated, Value,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  Pixelated = (function(superClass) {\n    extend(Pixelated, superClass);\n\n    function Pixelated() {\n      return Pixelated.__super__.constructor.apply(this, arguments);\n    }\n\n    Pixelated.names = ['pixelated'];\n\n    Pixelated.prototype.replace = function(string, prefix) {\n      if (prefix === '-webkit-') {\n        return string.replace(this.regexp(), '$1-webkit-optimize-contrast');\n      } else if (prefix === '-moz-') {\n        return string.replace(this.regexp(), '$1-moz-crisp-edges');\n      } else {\n        return Pixelated.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    Pixelated.prototype.old = function(prefix) {\n      if (prefix === '-webkit-') {\n        return new OldValue(this.name, '-webkit-optimize-contrast');\n      } else if (prefix === '-moz-') {\n        return new OldValue(this.name, '-moz-crisp-edges');\n      } else {\n        return Pixelated.__super__.old.apply(this, arguments);\n      }\n    };\n\n    return Pixelated;\n\n  })(Value);\n\n  module.exports = Pixelated;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/image-set.js":"(function() {\n  var ImageSet, Value, list,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  list = require('postcss/lib/list');\n\n  Value = require('../value');\n\n  ImageSet = (function(superClass) {\n    extend(ImageSet, superClass);\n\n    function ImageSet() {\n      return ImageSet.__super__.constructor.apply(this, arguments);\n    }\n\n    ImageSet.names = ['image-set'];\n\n    ImageSet.prototype.replace = function(string, prefix) {\n      if (prefix === '-webkit-') {\n        return ImageSet.__super__.replace.apply(this, arguments).replace(/(\"[^\"]+\"|'[^']+')(\\s+\\d+\\w)/gi, 'url($1)$2');\n      } else {\n        return ImageSet.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    return ImageSet;\n\n  })(Value);\n\n  module.exports = ImageSet;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/cross-fade.js":"(function() {\n  var CrossFade, OldValue, Value, list, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  list = require('postcss/lib/list');\n\n  CrossFade = (function(superClass) {\n    extend(CrossFade, superClass);\n\n    function CrossFade() {\n      return CrossFade.__super__.constructor.apply(this, arguments);\n    }\n\n    CrossFade.names = ['cross-fade'];\n\n    CrossFade.prototype.replace = function(string, prefix) {\n      return list.space(string).map((function(_this) {\n        return function(value) {\n          var after, args, close, match;\n          if (value.slice(0, +_this.name.length + 1 || 9e9) !== _this.name + '(') {\n            return value;\n          }\n          close = value.lastIndexOf(')');\n          after = value.slice(close + 1);\n          args = value.slice(_this.name.length + 1, +(close - 1) + 1 || 9e9);\n          if (prefix === '-webkit-') {\n            match = args.match(/\\d*.?\\d+%?/);\n            if (match) {\n              args = args.slice(match[0].length).trim();\n              args += ', ' + match[0];\n            } else {\n              args += ', 0.5';\n            }\n          }\n          return prefix + _this.name + '(' + args + ')' + after;\n        };\n      })(this)).join(' ');\n    };\n\n    return CrossFade;\n\n  })(Value);\n\n  module.exports = CrossFade;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/flex-values.js":"(function() {\n  var FlexValues, OldValue, Value,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  FlexValues = (function(superClass) {\n    extend(FlexValues, superClass);\n\n    function FlexValues() {\n      return FlexValues.__super__.constructor.apply(this, arguments);\n    }\n\n    FlexValues.names = ['flex', 'flex-grow', 'flex-shrink', 'flex-basis'];\n\n    FlexValues.prototype.prefixed = function(prefix) {\n      return this.all.prefixed(this.name, prefix);\n    };\n\n    FlexValues.prototype.replace = function(string, prefix) {\n      return string.replace(this.regexp(), '$1' + this.prefixed(prefix) + '$3');\n    };\n\n    FlexValues.prototype.old = function(prefix) {\n      return new OldValue(this.name, this.prefixed(prefix));\n    };\n\n    return FlexValues;\n\n  })(Value);\n\n  module.exports = FlexValues;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/display-flex.js":"(function() {\n  var DisplayFlex, OldValue, Value, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  DisplayFlex = (function(superClass) {\n    extend(DisplayFlex, superClass);\n\n    DisplayFlex.names = ['display-flex', 'inline-flex'];\n\n    function DisplayFlex(name, prefixes) {\n      DisplayFlex.__super__.constructor.apply(this, arguments);\n      if (name === 'display-flex') {\n        this.name = 'flex';\n      }\n    }\n\n    DisplayFlex.prototype.check = function(decl) {\n      return decl.prop === 'display' && decl.value === this.name;\n    };\n\n    DisplayFlex.prototype.prefixed = function(prefix) {\n      var ref, spec;\n      ref = flexSpec(prefix), spec = ref[0], prefix = ref[1];\n      return prefix + (spec === 2009 ? this.name === 'flex' ? 'box' : 'inline-box' : spec === 2012 ? this.name === 'flex' ? 'flexbox' : 'inline-flexbox' : spec === 'final' ? this.name : void 0);\n    };\n\n    DisplayFlex.prototype.replace = function(string, prefix) {\n      return this.prefixed(prefix);\n    };\n\n    DisplayFlex.prototype.old = function(prefix) {\n      var prefixed;\n      prefixed = this.prefixed(prefix);\n      if (prefixed) {\n        return new OldValue(this.name, prefixed);\n      }\n    };\n\n    return DisplayFlex;\n\n  })(Value);\n\n  module.exports = DisplayFlex;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/display-grid.js":"(function() {\n  var DisplayGrid, OldValue, Value, flexSpec,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  flexSpec = require('./flex-spec');\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  DisplayGrid = (function(superClass) {\n    extend(DisplayGrid, superClass);\n\n    DisplayGrid.names = ['display-grid', 'inline-grid'];\n\n    function DisplayGrid(name, prefixes) {\n      DisplayGrid.__super__.constructor.apply(this, arguments);\n      if (name === 'display-grid') {\n        this.name = 'grid';\n      }\n    }\n\n    DisplayGrid.prototype.check = function(decl) {\n      return decl.prop === 'display' && decl.value === this.name;\n    };\n\n    return DisplayGrid;\n\n  })(Value);\n\n  module.exports = DisplayGrid;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/lib/hacks/filter-value.js":"(function() {\n  var FilterValue, OldFilterValue, OldValue, Value, utils,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  OldValue = require('../old-value');\n\n  Value = require('../value');\n\n  utils = require('../utils');\n\n  OldFilterValue = (function(superClass) {\n    extend(OldFilterValue, superClass);\n\n    function OldFilterValue() {\n      return OldFilterValue.__super__.constructor.apply(this, arguments);\n    }\n\n    OldFilterValue.prototype.clean = function(decl) {\n      return decl.value = utils.editList(decl.value, (function(_this) {\n        return function(props) {\n          if (props.every(function(i) {\n            return i.indexOf(_this.unprefixed) !== 0;\n          })) {\n            return props;\n          }\n          return props.filter(function(i) {\n            return i.indexOf(_this.prefixed) === -1;\n          });\n        };\n      })(this));\n    };\n\n    return OldFilterValue;\n\n  })(OldValue);\n\n  FilterValue = (function(superClass) {\n    extend(FilterValue, superClass);\n\n    FilterValue.names = ['filter', 'filter-function'];\n\n    function FilterValue(name, prefixes) {\n      FilterValue.__super__.constructor.apply(this, arguments);\n      if (name === 'filter-function') {\n        this.name = 'filter';\n      }\n    }\n\n    FilterValue.prototype.replace = function(value, prefix) {\n      if (prefix === '-webkit-' && value.indexOf('filter(') === -1) {\n        if (value.indexOf('-webkit-filter') === -1) {\n          return FilterValue.__super__.replace.apply(this, arguments) + ', ' + value;\n        } else {\n          return value;\n        }\n      } else {\n        return FilterValue.__super__.replace.apply(this, arguments);\n      }\n    };\n\n    FilterValue.prototype.old = function(prefix) {\n      return new OldFilterValue(this.name, prefix + this.name);\n    };\n\n    return FilterValue;\n\n  })(Value);\n\n  module.exports = FilterValue;\n\n}).call(this);\n","/home/travis/build/npmtest/node-npmtest-autoprefixer/autoprefixer/data/prefixes.js":"(function() {\n  var add, backdropFilter, bckgrndImgOpts, boxdecorbreak, crispedges, cursorsGrab, cursorsNewer, decoration, devdaptation, elementFunction, feature, filterFunction, flexbox, fullscreen, gradients, grid, logicalProps, prefix, readOnly, resolution, result, sort, textAlignLast, textSizeAdjust, textSpacing, transforms3d, userSelectNone, writingMode,\n    slice = [].slice;\n\n  sort = function(array) {\n    return array.sort(function(a, b) {\n      var d;\n      a = a.split(' ');\n      b = b.split(' ');\n      if (a[0] > b[0]) {\n        return 1;\n      } else if (a[0] < b[0]) {\n        return -1;\n      } else {\n        d = parseFloat(a[1]) - parseFloat(b[1]);\n        if (d > 0) {\n          return 1;\n        } else if (d < 0) {\n          return -1;\n        } else {\n          return 0;\n        }\n      }\n    });\n  };\n\n  feature = function(data, opts, callback) {\n    var browser, match, need, ref, ref1, support, version, versions;\n    if (!callback) {\n      ref = [opts, {}], callback = ref[0], opts = ref[1];\n    }\n    match = opts.match || /\\sx($|\\s)/;\n    need = [];\n    ref1 = data.stats;\n    for (browser in ref1) {\n      versions = ref1[browser];\n      for (version in versions) {\n        support = versions[version];\n        if (support.match(match)) {\n          need.push(browser + ' ' + version);\n        }\n      }\n    }\n    return callback(sort(need));\n  };\n\n  result = {};\n\n  prefix = function() {\n    var data, i, j, k, len, name, names, results;\n    names = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), data = arguments[j++];\n    results = [];\n    for (k = 0, len = names.length; k < len; k++) {\n      name = names[k];\n      result[name] = {};\n      results.push((function() {\n        var results1;\n        results1 = [];\n        for (i in data) {\n          results1.push(result[name][i] = data[i]);\n        }\n        return results1;\n      })());\n    }\n    return results;\n  };\n\n  add = function() {\n    var data, j, k, len, name, names, results;\n    names = 2 <= arguments.length ? slice.call(arguments, 0, j = arguments.length - 1) : (j = 0, []), data = arguments[j++];\n    results = [];\n    for (k = 0, len = names.length; k < len; k++) {\n      name = names[k];\n      results.push(result[name].browsers = sort(result[name].browsers.concat(data.browsers)));\n    }\n    return results;\n  };\n\n  module.exports = result;\n\n  feature(require('caniuse-db/features-json/border-radius.json'), function(browsers) {\n    return prefix('border-radius', 'border-top-left-radius', 'border-top-right-radius', 'border-bottom-right-radius', 'border-bottom-left-radius', {\n      mistakes: ['-khtml-', '-ms-', '-o-'],\n      browsers: browsers,\n      feature: 'border-radius'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-boxshadow.json'), function(browsers) {\n    return prefix('box-shadow', {\n      mistakes: ['-khtml-'],\n      browsers: browsers,\n      feature: 'css-boxshadow'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-animation.json'), function(browsers) {\n    return prefix('animation', 'animation-name', 'animation-duration', 'animation-delay', 'animation-direction', 'animation-fill-mode', 'animation-iteration-count', 'animation-play-state', 'animation-timing-function', '@keyframes', {\n      mistakes: ['-khtml-', '-ms-'],\n      browsers: browsers,\n      feature: 'css-animation'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-transitions.json'), function(browsers) {\n    return prefix('transition', 'transition-property', 'transition-duration', 'transition-delay', 'transition-timing-function', {\n      mistakes: ['-khtml-', '-ms-'],\n      browsers: browsers,\n      feature: 'css-transitions'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/transforms2d.json'), function(browsers) {\n    return prefix('transform', 'transform-origin', {\n      browsers: browsers,\n      feature: 'transforms2d'\n    });\n  });\n\n  transforms3d = require('caniuse-db/features-json/transforms3d.json');\n\n  feature(transforms3d, function(browsers) {\n    prefix('perspective', 'perspective-origin', {\n      browsers: browsers,\n      feature: 'transforms3d'\n    });\n    return prefix('transform-style', {\n      mistakes: ['-ms-', '-o-'],\n      browsers: browsers,\n      feature: 'transforms3d'\n    });\n  });\n\n  feature(transforms3d, {\n    match: /y\\sx|y\\s#2/\n  }, function(browsers) {\n    return prefix('backface-visibility', {\n      mistakes: ['-ms-', '-o-'],\n      browsers: browsers,\n      feature: 'transforms3d'\n    });\n  });\n\n  gradients = require('caniuse-db/features-json/css-gradients.json');\n\n  feature(gradients, {\n    match: /y\\sx/\n  }, function(browsers) {\n    return prefix('linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient', {\n      props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],\n      mistakes: ['-ms-'],\n      browsers: browsers,\n      feature: 'css-gradients'\n    });\n  });\n\n  feature(gradients, {\n    match: /a\\sx/\n  }, function(browsers) {\n    browsers = browsers.map(function(i) {\n      if (/op/.test(i)) {\n        return i;\n      } else {\n        return i + \" old\";\n      }\n    });\n    return add('linear-gradient', 'repeating-linear-gradient', 'radial-gradient', 'repeating-radial-gradient', {\n      browsers: browsers,\n      feature: 'css-gradients'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css3-boxsizing.json'), function(browsers) {\n    return prefix('box-sizing', {\n      browsers: browsers,\n      feature: 'css3-boxsizing'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-filters.json'), function(browsers) {\n    return prefix('filter', {\n      browsers: browsers,\n      feature: 'css-filters'\n    });\n  });\n\n  filterFunction = require('caniuse-db/features-json/css-filter-function.json');\n\n  feature(filterFunction, function(browsers) {\n    return prefix('filter-function', {\n      props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],\n      browsers: browsers,\n      feature: 'css-filter-function'\n    });\n  });\n\n  backdropFilter = require('caniuse-db/features-json/css-backdrop-filter.json');\n\n  feature(backdropFilter, function(browsers) {\n    return prefix('backdrop-filter', {\n      browsers: browsers,\n      feature: 'css-backdrop-filter'\n    });\n  });\n\n  elementFunction = require('caniuse-db/features-json/css-element-function.json');\n\n  feature(elementFunction, function(browsers) {\n    return prefix('element', {\n      props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],\n      browsers: browsers,\n      feature: 'css-element-function'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/multicolumn.json'), function(browsers) {\n    prefix('columns', 'column-width', 'column-gap', 'column-rule', 'column-rule-color', 'column-rule-width', {\n      browsers: browsers,\n      feature: 'multicolumn'\n    });\n    return prefix('column-count', 'column-rule-style', 'column-span', 'column-fill', 'break-before', 'break-after', 'break-inside', {\n      browsers: browsers,\n      feature: 'multicolumn'\n    });\n  });\n\n  userSelectNone = require('caniuse-db/features-json/user-select-none.json');\n\n  feature(userSelectNone, function(browsers) {\n    return prefix('user-select', {\n      mistakes: ['-khtml-'],\n      browsers: browsers,\n      feature: 'user-select-none'\n    });\n  });\n\n  flexbox = require('caniuse-db/features-json/flexbox.json');\n\n  feature(flexbox, {\n    match: /a\\sx/\n  }, function(browsers) {\n    browsers = browsers.map(function(i) {\n      if (/ie|firefox/.test(i)) {\n        return i;\n      } else {\n        return i + \" 2009\";\n      }\n    });\n    prefix('display-flex', 'inline-flex', {\n      props: ['display'],\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n    prefix('flex', 'flex-grow', 'flex-shrink', 'flex-basis', {\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n    return prefix('flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content', {\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n  });\n\n  feature(flexbox, {\n    match: /y\\sx/\n  }, function(browsers) {\n    add('display-flex', 'inline-flex', {\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n    add('flex', 'flex-grow', 'flex-shrink', 'flex-basis', {\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n    return add('flex-direction', 'flex-wrap', 'flex-flow', 'justify-content', 'order', 'align-items', 'align-self', 'align-content', {\n      browsers: browsers,\n      feature: 'flexbox'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/calc.json'), function(browsers) {\n    return prefix('calc', {\n      props: ['*'],\n      browsers: browsers,\n      feature: 'calc'\n    });\n  });\n\n  bckgrndImgOpts = require('caniuse-db/features-json/background-img-opts.json');\n\n  feature(bckgrndImgOpts, function(browsers) {\n    return prefix('background-clip', 'background-origin', 'background-size', {\n      browsers: browsers,\n      feature: 'background-img-opts'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/font-feature.json'), function(browsers) {\n    return prefix('font-feature-settings', 'font-variant-ligatures', 'font-language-override', {\n      browsers: browsers,\n      feature: 'font-feature'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/font-kerning.json'), function(browsers) {\n    return prefix('font-kerning', {\n      browsers: browsers,\n      feature: 'font-kerning'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/border-image.json'), function(browsers) {\n    return prefix('border-image', {\n      browsers: browsers,\n      feature: 'border-image'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-selection.json'), function(browsers) {\n    return prefix('::selection', {\n      selector: true,\n      browsers: browsers,\n      feature: 'css-selection'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-placeholder.json'), function(browsers) {\n    browsers = browsers.map(function(i) {\n      var name, ref, version;\n      ref = i.split(' '), name = ref[0], version = ref[1];\n      if (name === 'firefox' && parseFloat(version) <= 18) {\n        return i + ' old';\n      } else {\n        return i;\n      }\n    });\n    return prefix('::placeholder', {\n      selector: true,\n      browsers: browsers,\n      feature: 'css-placeholder'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-hyphens.json'), function(browsers) {\n    return prefix('hyphens', {\n      browsers: browsers,\n      feature: 'css-hyphens'\n    });\n  });\n\n  fullscreen = require('caniuse-db/features-json/fullscreen.json');\n\n  feature(fullscreen, function(browsers) {\n    return prefix(':fullscreen', {\n      selector: true,\n      browsers: browsers,\n      feature: 'fullscreen'\n    });\n  });\n\n  feature(fullscreen, {\n    match: /x(\\s#2|$)/\n  }, function(browsers) {\n    return prefix('::backdrop', {\n      selector: true,\n      browsers: browsers,\n      feature: 'fullscreen'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css3-tabsize.json'), function(browsers) {\n    return prefix('tab-size', {\n      browsers: browsers,\n      feature: 'css3-tabsize'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/intrinsic-width.json'), function(browsers) {\n    return prefix('max-content', 'min-content', 'fit-content', 'fill', 'fill-available', 'stretch', {\n      props: ['width', 'min-width', 'max-width', 'height', 'min-height', 'max-height', 'inline-size', 'min-inline-size', 'max-inline-size', 'block-size', 'min-block-size', 'max-block-size'],\n      browsers: browsers,\n      feature: 'intrinsic-width'\n    });\n  });\n\n  cursorsNewer = require('caniuse-db/features-json/css3-cursors-newer.json');\n\n  feature(cursorsNewer, function(browsers) {\n    return prefix('zoom-in', 'zoom-out', {\n      props: ['cursor'],\n      browsers: browsers,\n      feature: 'css3-cursors-newer'\n    });\n  });\n\n  cursorsGrab = require('caniuse-db/features-json/css3-cursors-grab.json');\n\n  feature(cursorsGrab, function(browsers) {\n    return prefix('grab', 'grabbing', {\n      props: ['cursor'],\n      browsers: browsers,\n      feature: 'css3-cursors-grab'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-sticky.json'), function(browsers) {\n    return prefix('sticky', {\n      props: ['position'],\n      browsers: browsers,\n      feature: 'css-sticky'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/pointer.json'), function(browsers) {\n    return prefix('touch-action', {\n      browsers: browsers,\n      feature: 'pointer'\n    });\n  });\n\n  decoration = require('caniuse-db/features-json/text-decoration.json');\n\n  feature(decoration, function(browsers) {\n    return prefix('text-decoration-style', 'text-decoration-color', 'text-decoration-line', {\n      browsers: browsers,\n      feature: 'text-decoration'\n    });\n  });\n\n  feature(decoration, {\n    match: /x.*#[23]/\n  }, function(browsers) {\n    return prefix('text-decoration-skip', {\n      browsers: browsers,\n      feature: 'text-decoration'\n    });\n  });\n\n  textSizeAdjust = require('caniuse-db/features-json/text-size-adjust.json');\n\n  feature(textSizeAdjust, function(browsers) {\n    return prefix('text-size-adjust', {\n      browsers: browsers,\n      feature: 'text-size-adjust'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-masks.json'), function(browsers) {\n    prefix('mask-clip', 'mask-composite', 'mask-image', 'mask-origin', 'mask-repeat', 'mask-border-repeat', 'mask-border-source', {\n      browsers: browsers,\n      feature: 'css-masks'\n    });\n    return prefix('mask', 'mask-position', 'mask-size', 'mask-border', 'mask-border-outset', 'mask-border-width', 'mask-border-slice', {\n      browsers: browsers,\n      feature: 'css-masks'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-clip-path.json'), function(browsers) {\n    return prefix('clip-path', {\n      browsers: browsers,\n      feature: 'css-clip-path'\n    });\n  });\n\n  boxdecorbreak = require('caniuse-db/features-json/css-boxdecorationbreak.json');\n\n  feature(boxdecorbreak, function(browsers) {\n    return prefix('box-decoration-break', {\n      browsers: browsers,\n      feature: 'css-boxdecorationbreak'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/object-fit.json'), function(browsers) {\n    return prefix('object-fit', 'object-position', {\n      browsers: browsers,\n      feature: 'object-fit'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-shapes.json'), function(browsers) {\n    return prefix('shape-margin', 'shape-outside', 'shape-image-threshold', {\n      browsers: browsers,\n      feature: 'css-shapes'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/text-overflow.json'), function(browsers) {\n    return prefix('text-overflow', {\n      browsers: browsers,\n      feature: 'text-overflow'\n    });\n  });\n\n  devdaptation = require('caniuse-db/features-json/css-deviceadaptation.json');\n\n  feature(devdaptation, function(browsers) {\n    return prefix('@viewport', {\n      browsers: browsers,\n      feature: 'css-deviceadaptation'\n    });\n  });\n\n  resolution = require('caniuse-db/features-json/css-media-resolution.json');\n\n  feature(resolution, {\n    match: /( x($| )|a #3)/\n  }, function(browsers) {\n    return prefix('@resolution', {\n      browsers: browsers,\n      feature: 'css-media-resolution'\n    });\n  });\n\n  textAlignLast = require('caniuse-db/features-json/css-text-align-last.json');\n\n  feature(textAlignLast, function(browsers) {\n    return prefix('text-align-last', {\n      browsers: browsers,\n      feature: 'css-text-align-last'\n    });\n  });\n\n  crispedges = require('caniuse-db/features-json/css-crisp-edges.json');\n\n  feature(crispedges, {\n    match: /y x|a x #1/\n  }, function(browsers) {\n    return prefix('pixelated', {\n      props: ['image-rendering'],\n      browsers: browsers,\n      feature: 'css-crisp-edges'\n    });\n  });\n\n  feature(crispedges, {\n    match: /a x #2/\n  }, function(browsers) {\n    return prefix('image-rendering', {\n      browsers: browsers,\n      feature: 'css-crisp-edges'\n    });\n  });\n\n  logicalProps = require('caniuse-db/features-json/css-logical-props.json');\n\n  feature(logicalProps, function(browsers) {\n    return prefix('border-inline-start', 'border-inline-end', 'margin-inline-start', 'margin-inline-end', 'padding-inline-start', 'padding-inline-end', {\n      browsers: browsers,\n      feature: 'css-logical-props'\n    });\n  });\n\n  feature(logicalProps, {\n    match: /x\\s#2/\n  }, function(browsers) {\n    return prefix('border-block-start', 'border-block-end', 'margin-block-start', 'margin-block-end', 'padding-block-start', 'padding-block-end', {\n      browsers: browsers,\n      feature: 'css-logical-props'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-appearance.json'), function(browsers) {\n    return prefix('appearance', {\n      browsers: browsers,\n      feature: 'css-appearance'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-snappoints.json'), function(browsers) {\n    return prefix('scroll-snap-type', 'scroll-snap-coordinate', 'scroll-snap-destination', 'scroll-snap-points-x', 'scroll-snap-points-y', {\n      browsers: browsers,\n      feature: 'css-snappoints'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-regions.json'), function(browsers) {\n    return prefix('flow-into', 'flow-from', 'region-fragment', {\n      browsers: browsers,\n      feature: 'css-regions'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-image-set.json'), function(browsers) {\n    return prefix('image-set', {\n      props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],\n      browsers: browsers,\n      feature: 'css-image-set'\n    });\n  });\n\n  writingMode = require('caniuse-db/features-json/css-writing-mode.json');\n\n  feature(writingMode, {\n    match: /a|x/\n  }, function(browsers) {\n    return prefix('writing-mode', {\n      browsers: browsers,\n      feature: 'css-writing-mode'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-cross-fade.json'), function(browsers) {\n    return prefix('cross-fade', {\n      props: ['background', 'background-image', 'border-image', 'mask', 'list-style', 'list-style-image', 'content', 'mask-image'],\n      browsers: browsers,\n      feature: 'css-cross-fade'\n    });\n  });\n\n  readOnly = require('caniuse-db/features-json/css-read-only-write.json');\n\n  feature(readOnly, function(browsers) {\n    return prefix(':read-only', ':read-write', {\n      selector: true,\n      browsers: browsers,\n      feature: 'css-read-only-write'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/text-emphasis.json'), function(browsers) {\n    return prefix('text-emphasis', 'text-emphasis-position', 'text-emphasis-style', 'text-emphasis-color', {\n      browsers: browsers,\n      feature: 'text-emphasis'\n    });\n  });\n\n  grid = require('caniuse-db/features-json/css-grid.json');\n\n  feature(grid, function(browsers) {\n    prefix('display-grid', 'inline-grid', {\n      props: ['display'],\n      browsers: browsers,\n      feature: 'css-grid'\n    });\n    return prefix('grid-template-columns', 'grid-template-rows', 'grid-row-start', 'grid-column-start', 'grid-row-end', 'grid-column-end', 'grid-row', 'grid-column', {\n      browsers: browsers,\n      feature: 'css-grid'\n    });\n  });\n\n  feature(grid, {\n    match: /a x/\n  }, function(browsers) {\n    return prefix('justify-items', 'grid-row-align', {\n      browsers: browsers,\n      feature: 'css-grid'\n    });\n  });\n\n  textSpacing = require('caniuse-db/features-json/css-text-spacing.json');\n\n  feature(textSpacing, function(browsers) {\n    return prefix('text-spacing', {\n      browsers: browsers,\n      feature: 'css-text-spacing'\n    });\n  });\n\n  feature(require('caniuse-db/features-json/css-any-link.json'), function(browsers) {\n    return prefix(':any-link', {\n      selector: true,\n      browsers: browsers,\n      feature: 'css-any-link'\n    });\n  });\n\n}).call(this);\n"}